{"availableCount":197,"searchTerms":[],"userState":"006145d7-4baa-4d41-b8cd-01c1a7256e42","resources":[{"imageURL":"bundleentry://52.fwk918423056/icons/run.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/bluetooth/example/bt_ncp/readme.md"],"description":"Network Co-Processor (NCP) target application. Runs the Bluetooth stack dynamically and provides access to it via Bluetooth API (BGAPI) using UART connection. NCP mode makes it possible to run your application on a host controller or PC.","id":"com.silabs.sdk.stack.super:4.4.6._1150219681_Bluetooth - NCP_asset:..com.silabs.sdk.stack.super_4.4.6.app.bluetooth.demos.bt_ncp.bt_ncp-brd4166a.s37","text":"Bluetooth - NCP","priority":0,"category":"DEMOS","toolTipText":"Network Co-Processor (NCP) target application. Runs the Bluetooth stack dynamically and provides access to it via Bluetooth API (BGAPI) using UART connection. NCP mode makes it possible to run your application on a host controller or PC.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/bluetooth/example/bt_ncp/readme.md"],"description":"Network Co-Processor (NCP) target application. Runs the Bluetooth stack dynamically and provides access to it via Bluetooth API (BGAPI) using UART connection. NCP mode makes it possible to run your application on a host controller or PC.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.bt_ncp.example/bt_ncp/bt_ncp.slcp","text":"Bluetooth - NCP","priority":9999999,"category":"SOFTWARE","toolTipText":"Network Co-Processor (NCP) target application. Runs the Bluetooth stack dynamically and provides access to it via Bluetooth API (BGAPI) using UART connection. NCP mode makes it possible to run your application on a host controller or PC.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/bluetooth/example/bt_ncp_host/readme.md"],"description":"Reference implementation of an NCP (Network Co-Processor) host, which typically runs on a central MCU without radio. It can connect to an NCP target running the NCP Example via UART to access the Bluetooth stack on the target and to control it using BGAPI.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.bt_ncp_host.example/bt_ncp_host/bt_ncp_host.slcp","text":"Bluetooth - NCP Host","priority":9999999,"category":"SOFTWARE","toolTipText":"Reference implementation of an NCP (Network Co-Processor) host, which typically runs on a central MCU without radio. It can connect to an NCP target running the NCP Example via UART to access the Bluetooth stack on the target and to control it using BGAPI.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/bluetooth/example/bt_rcp/readme.md"],"description":"Radio Co-Processor (RCP) target application. Runs the Bluetooth Controller (i.e. the Link Layer only) and provides access to it using the standard HCI (Host-Controller Interface) over a UART connection.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.bt_rcp.example/bt_rcp/bt_rcp.slcp","text":"Bluetooth - RCP","priority":9999999,"category":"SOFTWARE","toolTipText":"Radio Co-Processor (RCP) target application. Runs the Bluetooth Controller (i.e. the Link Layer only) and provides access to it using the standard HCI (Host-Controller Interface) over a UART connection.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/bluetooth/example/bt_rcp/readme_rcp_cpc.md"],"description":"Radio Co-Processor (RCP) target application. Runs the Bluetooth Controller (i.e. the Link Layer only) and provides access to it using the standard HCI (Host-Controller Interface) over CPC (Co-Processor Communication) protocol through UART connection.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.bt_rcp_cpc.example/bt_rcp/bt_rcp_cpc.slcp","text":"Bluetooth - RCP CPC","priority":9999999,"category":"SOFTWARE","toolTipText":"Radio Co-Processor (RCP) target application. Runs the Bluetooth Controller (i.e. the Link Layer only) and provides access to it using the standard HCI (Host-Controller Interface) over CPC (Co-Processor Communication) protocol through UART connection.\n"},{"imageURL":"bundleentry://52.fwk918423056/icons/run.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/bluetooth/example/bt_soc_blinky/readme.md"],"description":"The classic blinky example using Bluetooth communication. Demonstrates a simple two-way data exchange over GATT. This can be tested with the EFR Connect mobile app.","id":"com.silabs.sdk.stack.super:4.4.6._1150219681_Bluetooth - SoC Blinky_asset:..com.silabs.sdk.stack.super_4.4.6.app.bluetooth.demos.bt_soc_blinky.bt_soc_blinky-brd4166a.s37","text":"Bluetooth - SoC Blinky","priority":0,"category":"DEMOS","toolTipText":"The classic blinky example using Bluetooth communication. Demonstrates a simple two-way data exchange over GATT. This can be tested with the EFR Connect mobile app.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/bluetooth/example/bt_soc_blinky/readme.md"],"description":"The classic blinky example using Bluetooth communication. Demonstrates a simple two-way data exchange over GATT. This can be tested with the EFR Connect mobile app.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.bt_soc_blinky.example/bt_soc_blinky/bt_soc_blinky.slcp","text":"Bluetooth - SoC Blinky","priority":9999999,"category":"SOFTWARE","toolTipText":"The classic blinky example using Bluetooth communication. Demonstrates a simple two-way data exchange over GATT. This can be tested with the EFR Connect mobile app.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/bluetooth/example/bt_soc_dtm/readme.md"],"description":"This example implements the direct test mode (DTM) application for radio testing. DTM commands can be called via UART.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.bt_soc_dtm.example/bt_soc_dtm/bt_soc_dtm.slcp","text":"Bluetooth - SoC DTM","priority":9999999,"category":"SOFTWARE","toolTipText":"This example implements the direct test mode (DTM) application for radio testing. DTM commands can be called via UART.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/bluetooth/example/bt_soc_empty/readme.md"],"description":"A minimal project structure, that serves as a starting point for custom Bluetooth applications. The application starts advertising after boot and restarts advertising after a connection is closed.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.bt_soc_empty.example/bt_soc_empty/bt_soc_empty.slcp","text":"Bluetooth - SoC Empty","priority":9999999,"category":"SOFTWARE","toolTipText":"A minimal project structure, that serves as a starting point for custom Bluetooth applications. The application starts advertising after boot and restarts advertising after a connection is closed.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/bluetooth/example/bt_soc_iop_test/readme.md"],"description":"This is a test procedure containing several test cases for Bluetooth Low Energy communication. This demo is meant to be used with the EFR Connect mobile app, through the \"Interoperability Test\" tile on the Develop view of the app.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.bt_soc_iop_test_log.example/bt_soc_iop_test/bt_soc_iop_test_log.slcp","text":"Bluetooth - SoC Interoperability Test","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a test procedure containing several test cases for Bluetooth Low Energy communication. This demo is meant to be used with the EFR Connect mobile app, through the \"Interoperability Test\" tile on the Develop view of the app.\n"},{"imageURL":"bundleentry://52.fwk918423056/icons/run.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/bluetooth/example/bt_soc_thermometer/readme.md"],"description":"Implements a GATT Server with the Health Thermometer Profile, which enables a Client device to connect and get temperature data. Temperature is read from the Si7021 digital relative humidity and temperature sensor of the WSTK or of the Thunderboard.","id":"com.silabs.sdk.stack.super:4.4.6._1150219681_Bluetooth - SoC Thermometer_asset:..com.silabs.sdk.stack.super_4.4.6.app.bluetooth.demos.bt_soc_thermometer.bt_soc_thermometer-brd4166a.s37","text":"Bluetooth - SoC Thermometer","priority":0,"category":"DEMOS","toolTipText":"Implements a GATT Server with the Health Thermometer Profile, which enables a Client device to connect and get temperature data. Temperature is read from the Si7021 digital relative humidity and temperature sensor of the WSTK or of the Thunderboard.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/bluetooth/example/bt_soc_thermometer/readme.md"],"description":"Implements a GATT Server with the Health Thermometer Profile, which enables a Client device to connect and get temperature data. Temperature is read from the Si7021 digital relative humidity and temperature sensor of the WSTK or of the Thunderboard.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.bt_soc_thermometer.example/bt_soc_thermometer/bt_soc_thermometer.slcp","text":"Bluetooth - SoC Thermometer","priority":9999999,"category":"SOFTWARE","toolTipText":"Implements a GATT Server with the Health Thermometer Profile, which enables a Client device to connect and get temperature data. Temperature is read from the Si7021 digital relative humidity and temperature sensor of the WSTK or of the Thunderboard.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/bluetooth/example/bt_soc_thermometer_client/readme.md"],"description":"Implements a GATT Client that discovers and connects with up to 4 BLE devices advertising themselves as Thermometer Servers. It displays the discovery process and the temperature values received via UART.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.bt_soc_thermometer_client.example/bt_soc_thermometer_client/bt_soc_thermometer_client.slcp","text":"Bluetooth - SoC Thermometer Client","priority":9999999,"category":"SOFTWARE","toolTipText":"Implements a GATT Client that discovers and connects with up to 4 BLE devices advertising themselves as Thermometer Servers. It displays the discovery process and the temperature values received via UART.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/bluetooth/example/bt_soc_thermometer/readme_rtos.md"],"description":"Demonstrates the integration of FreeRTOS into Bluetooth applications. RTOS is added to the Bluetooth - SoC Thermometer sample app.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.bt_soc_thermometer_freertos.example/bt_soc_thermometer/bt_soc_thermometer_freertos.slcp","text":"Bluetooth - SoC Thermometer FreeRTOS","priority":9999999,"category":"SOFTWARE","toolTipText":"Demonstrates the integration of FreeRTOS into Bluetooth applications. RTOS is added to the Bluetooth - SoC Thermometer sample app.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/bluetooth/example/bt_soc_thermometer/readme_rtos.md"],"description":"Demonstrates the integration of Micrium OS into Bluetooth applications. RTOS is added to the Bluetooth - SoC Thermometer sample app.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.bt_soc_thermometer_micriumos.example/bt_soc_thermometer/bt_soc_thermometer_micriumos.slcp","text":"Bluetooth - SoC Thermometer Micrium OS","priority":9999999,"category":"SOFTWARE","toolTipText":"Demonstrates the integration of Micrium OS into Bluetooth applications. RTOS is added to the Bluetooth - SoC Thermometer sample app.\n"},{"imageURL":"bundleentry://52.fwk918423056/icons/run.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/bluetooth/example/bt_soc_throughput/readme.md"],"description":"This example tests the throughput capabilities of the device and can be used to measure throughput between 2 *EFR32* devices, as well as between a device and a smartphone using EFR Connect mobile app, through the Throughput demo tile.","id":"com.silabs.sdk.stack.super:4.4.6._1150219681_Bluetooth - SoC Throughput (two buttons)_asset:..com.silabs.sdk.stack.super_4.4.6.app.bluetooth.demos.bt_soc_throughput_log.bt_soc_throughput_log-brd4166a.s37","text":"Bluetooth - SoC Throughput (two buttons)","priority":0,"category":"DEMOS","toolTipText":"This example tests the throughput capabilities of the device and can be used to measure throughput between 2 *EFR32* devices, as well as between a device and a smartphone using EFR Connect mobile app, through the Throughput demo tile.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/bluetooth/example/bt_soc_throughput/readme.md"],"description":"This example tests the throughput capabilities of the device and can be used to measure throughput between 2 *EFR32* devices, as well as between a device and a smartphone using EFR Connect mobile app, through the Throughput demo tile.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.bt_soc_throughput_log.example/bt_soc_throughput/bt_soc_throughput_log.slcp","text":"Bluetooth - SoC Throughput (two buttons)","priority":9999999,"category":"SOFTWARE","toolTipText":"This example tests the throughput capabilities of the device and can be used to measure throughput between 2 *EFR32* devices, as well as between a device and a smartphone using EFR Connect mobile app, through the Throughput demo tile.\n"},{"imageURL":"bundleentry://52.fwk918423056/icons/run.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/bluetooth/example/bt_soc_thunderboard/readme.md"],"description":"Demonstrates the features of the Thunderboard Sense 2 Kit. This can be tested with the EFR Connect mobile app.","id":"com.silabs.sdk.stack.super:4.4.6._1150219681_Bluetooth - SoC Thunderboard Sense 2_asset:..com.silabs.sdk.stack.super_4.4.6.app.bluetooth.demos.bt_soc_thunderboard_brd4166a.bt_soc_thunderboard_brd4166a-brd4166a.s37","text":"Bluetooth - SoC Thunderboard Sense 2","priority":0,"category":"DEMOS","toolTipText":"Demonstrates the features of the Thunderboard Sense 2 Kit. This can be tested with the EFR Connect mobile app.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/bluetooth/example/bt_soc_thunderboard/readme.md"],"description":"Demonstrates the features of the Thunderboard Sense 2 Kit. This can be tested with the EFR Connect mobile app.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.bt_soc_thunderboard_brd4166a.example/bt_soc_thunderboard/bt_soc_thunderboard_brd4166a.slcp","text":"Bluetooth - SoC Thunderboard Sense 2","priority":9999999,"category":"SOFTWARE","toolTipText":"Demonstrates the features of the Thunderboard Sense 2 Kit. This can be tested with the EFR Connect mobile app.\n"},{"imageURL":"bundleentry://52.fwk918423056/icons/run.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/bluetooth/example/bt_soc_voice/readme.md"],"description":"Voice over Bluetooth Low Energy sample application. It is supported by Thunderboard Sense 2 and Thunderboard EFR32BG22 boards and demonstrates how to send voice data over GATT, which is acquired from the on-board microphones.","id":"com.silabs.sdk.stack.super:4.4.6._1150219681_Bluetooth - SoC Voice_asset:..com.silabs.sdk.stack.super_4.4.6.app.bluetooth.demos.bt_soc_voice.bt_soc_voice-brd4166a.s37","text":"Bluetooth - SoC Voice","priority":0,"category":"DEMOS","toolTipText":"Voice over Bluetooth Low Energy sample application. It is supported by Thunderboard Sense 2 and Thunderboard EFR32BG22 boards and demonstrates how to send voice data over GATT, which is acquired from the on-board microphones.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/bluetooth/example/bt_soc_voice/readme.md"],"description":"Voice over Bluetooth Low Energy sample application. It is supported by Thunderboard Sense 2 and Thunderboard EFR32BG22 boards and demonstrates how to send voice data over GATT, which is acquired from the on-board microphones.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.bt_soc_voice.example/bt_soc_voice/bt_soc_voice.slcp","text":"Bluetooth - SoC Voice","priority":9999999,"category":"SOFTWARE","toolTipText":"Voice over Bluetooth Low Energy sample application. It is supported by Thunderboard Sense 2 and Thunderboard EFR32BG22 boards and demonstrates how to send voice data over GATT, which is acquired from the on-board microphones.\n"},{"imageURL":"bundleentry://52.fwk918423056/icons/run.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/bluetooth/example/bt_soc_ibeacon/readme.md"],"description":"Sends non-connectable advertisements in iBeacon format. The iBeacon Service gives Bluetooth accessories a simple and convenient way to send iBeacons to smartphones. This example can be tested together with the EFR Connect mobile app.","id":"com.silabs.sdk.stack.super:4.4.6._1150219681_Bluetooth - SoC iBeacon_asset:..com.silabs.sdk.stack.super_4.4.6.app.bluetooth.demos.bt_soc_ibeacon.bt_soc_ibeacon-brd4166a.s37","text":"Bluetooth - SoC iBeacon","priority":0,"category":"DEMOS","toolTipText":"Sends non-connectable advertisements in iBeacon format. The iBeacon Service gives Bluetooth accessories a simple and convenient way to send iBeacons to smartphones. This example can be tested together with the EFR Connect mobile app.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/bluetooth/example/bt_soc_ibeacon/readme.md"],"description":"Sends non-connectable advertisements in iBeacon format. The iBeacon Service gives Bluetooth accessories a simple and convenient way to send iBeacons to smartphones. This example can be tested together with the EFR Connect mobile app.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.bt_soc_ibeacon.example/bt_soc_ibeacon/bt_soc_ibeacon.slcp","text":"Bluetooth - SoC iBeacon","priority":9999999,"category":"SOFTWARE","toolTipText":"Sends non-connectable advertisements in iBeacon format. The iBeacon Service gives Bluetooth accessories a simple and convenient way to send iBeacons to smartphones. This example can be tested together with the EFR Connect mobile app.\n"},{"imageURL":"bundleentry://52.fwk918423056/icons/run.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/btmesh/documentation/example/btmesh_ncp_empty/readme.md"],"description":"An NCP Target C application that makes it possible for the NCP Host Controller to access the Bluetooth Mesh stack via UART. It provides access to the host layer via BGAPI and not to the link layer via HCI. Contains models from BT mesh specification 1.1.","id":"com.silabs.sdk.stack.super:4.4.6._1150219681_Bluetooth Mesh - NCP Empty v1.1_asset:..com.silabs.sdk.stack.super_4.4.6.app.btmesh.demos.btmesh_ncp_empty_v1_1.btmesh_ncp_empty_v1_1-brd4166a.s37","text":"Bluetooth Mesh - NCP Empty v1.1","priority":0,"category":"DEMOS","toolTipText":"An NCP Target C application that makes it possible for the NCP Host Controller to access the Bluetooth Mesh stack via UART. It provides access to the host layer via BGAPI and not to the link layer via HCI. Contains models from BT mesh specification 1.1.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/btmesh/documentation/example/btmesh_ncp_empty/readme.md"],"description":"An NCP Target C application that makes it possible for the NCP Host Controller to access the Bluetooth Mesh stack via UART. It provides access to the host layer via BGAPI and not to the link layer via HCI. Contains models from BT mesh specification 1.1.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.btmesh_ncp_empty_v1_1.example/btmesh_ncp_empty/btmesh_ncp_empty_v1_1.slcp","text":"Bluetooth Mesh - NCP Empty v1.1","priority":9999999,"category":"SOFTWARE","toolTipText":"An NCP Target C application that makes it possible for the NCP Host Controller to access the Bluetooth Mesh stack via UART. It provides access to the host layer via BGAPI and not to the link layer via HCI. Contains models from BT mesh specification 1.1.\n"},{"imageURL":"bundleentry://52.fwk918423056/icons/run.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/btmesh/documentation/example/btmesh_soc_nlc_sensor_ambient_light/readme.md"],"description":"An out-of-the-box Software Demo where the device acts as an Ambient Light Sensor in a Networked Lighting Control (NLC) system. The device measures ambient light and sends these measurements to the network. Properly configured NLC Basic Lightness Controllers then can act on the received data.","id":"com.silabs.sdk.stack.super:4.4.6._1150219681_Bluetooth Mesh - NLC Ambient Light Sensor_asset:..com.silabs.sdk.stack.super_4.4.6.app.btmesh.demos.btmesh_soc_nlc_sensor_ambient_light.btmesh_soc_nlc_sensor_ambient_light-brd4166a.s37","text":"Bluetooth Mesh - NLC Ambient Light Sensor","priority":0,"category":"DEMOS","toolTipText":"An out-of-the-box Software Demo where the device acts as an Ambient Light Sensor in a Networked Lighting Control (NLC) system. The device measures ambient light and sends these measurements to the network. Properly configured NLC Basic Lightness Controllers then can act on the received data.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/btmesh/documentation/example/btmesh_soc_nlc_sensor_ambient_light/readme.md"],"description":"An out-of-the-box Software Demo where the device acts as an Ambient Light Sensor in a Networked Lighting Control (NLC) system. The device measures ambient light and sends these measurements to the network. Properly configured NLC Basic Lightness Controllers then can act on the received data.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.btmesh_soc_nlc_sensor_ambient_light.example/btmesh_soc_nlc_sensor_ambient_light/btmesh_soc_nlc_sensor_ambient_light_tbsense.slcp","text":"Bluetooth Mesh - NLC Ambient Light Sensor","priority":9999999,"category":"SOFTWARE","toolTipText":"An out-of-the-box Software Demo where the device acts as an Ambient Light Sensor in a Networked Lighting Control (NLC) system. The device measures ambient light and sends these measurements to the network. Properly configured NLC Basic Lightness Controllers then can act on the received data.\n"},{"imageURL":"bundleentry://52.fwk918423056/icons/run.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/btmesh/documentation/example/btmesh_soc_nlc_basic_lightness_controller/readme.md"],"description":"An out-of-the-box software demo where the device acts as a Basic Lightness Controller in a Networked Lighting Control (NLC) system. The device listens to messages from other NLC devices, namely Occupancy Sensor, Ambient Light Sensor, Dimming Control and Basic Scene Selector nodes. This project uses the RGB LEDs on the Thunderboard Sense 2 board.","id":"com.silabs.sdk.stack.super:4.4.6._1150219681_Bluetooth Mesh - NLC Basic Lightness Controller_asset:..com.silabs.sdk.stack.super_4.4.6.app.btmesh.demos.btmesh_soc_nlc_basic_lightness_controller.btmesh_soc_nlc_basic_lightness_controller-brd4166a.s37","text":"Bluetooth Mesh - NLC Basic Lightness Controller","priority":0,"category":"DEMOS","toolTipText":"An out-of-the-box software demo where the device acts as a Basic Lightness Controller in a Networked Lighting Control (NLC) system. The device listens to messages from other NLC devices, namely Occupancy Sensor, Ambient Light Sensor, Dimming Control and Basic Scene Selector nodes.\nThis project uses the RGB LEDs on the Thunderboard Sense 2 board.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/btmesh/documentation/example/btmesh_soc_nlc_basic_lightness_controller/readme.md"],"description":"An out-of-the-box software demo where the device acts as a Basic Lightness Controller in a Networked Lighting Control (NLC) system. The device listens to messages from other NLC devices, namely Occupancy Sensor, Ambient Light Sensor, Dimming Control and Basic Scene Selector nodes. This project uses the RGB LEDs on the Thunderboard Sense 2 board.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.btmesh_soc_nlc_basic_lightness_controller.example/btmesh_soc_nlc_basic_lightness_controller/btmesh_soc_nlc_basic_lightness_controller_brd4166a.slcp","text":"Bluetooth Mesh - NLC Basic Lightness Controller","priority":9999999,"category":"SOFTWARE","toolTipText":"An out-of-the-box software demo where the device acts as a Basic Lightness Controller in a Networked Lighting Control (NLC) system. The device listens to messages from other NLC devices, namely Occupancy Sensor, Ambient Light Sensor, Dimming Control and Basic Scene Selector nodes.\nThis project uses the RGB LEDs on the Thunderboard Sense 2 board.\n"},{"imageURL":"bundleentry://52.fwk918423056/icons/run.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/btmesh/documentation/example/btmesh_soc_nlc_basic_scene_selector/readme.md"],"description":"An out-of-the-box Software Demo where the device acts as a Basic Scene Selector in a Networked Lighting Control (NLC) system. Push Button presses control Basic Lightness Controllers in the network by scene recall requests.","id":"com.silabs.sdk.stack.super:4.4.6._1150219681_Bluetooth Mesh - NLC Basic Scene Selector_asset:..com.silabs.sdk.stack.super_4.4.6.app.btmesh.demos.btmesh_soc_nlc_basic_scene_selector.btmesh_soc_nlc_basic_scene_selector-brd4166a.s37","text":"Bluetooth Mesh - NLC Basic Scene Selector","priority":0,"category":"DEMOS","toolTipText":"An out-of-the-box Software Demo where the device acts as a Basic Scene Selector in a Networked Lighting Control (NLC) system. Push Button presses control Basic Lightness Controllers in the network by scene recall requests.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/btmesh/documentation/example/btmesh_soc_nlc_basic_scene_selector/readme.md"],"description":"An out-of-the-box Software Demo where the device acts as a Basic Scene Selector in a Networked Lighting Control (NLC) system. Push Button presses control Basic Lightness Controllers in the network by scene recall requests.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.btmesh_soc_nlc_basic_scene_selector.example/btmesh_soc_nlc_basic_scene_selector/btmesh_soc_nlc_basic_scene_selector_log.slcp","text":"Bluetooth Mesh - NLC Basic Scene Selector","priority":9999999,"category":"SOFTWARE","toolTipText":"An out-of-the-box Software Demo where the device acts as a Basic Scene Selector in a Networked Lighting Control (NLC) system. Push Button presses control Basic Lightness Controllers in the network by scene recall requests.\n"},{"imageURL":"bundleentry://52.fwk918423056/icons/run.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/btmesh/documentation/example/btmesh_soc_nlc_basic_scene_selector/readme_low_power.md"],"description":"An out-of-the-box Software Demo where the device acts as a Basic Scene Selector in a Networked Lighting Control (NLC) system. It is optimized for low current consumption with disabled CLI, logging, and LCD. Push Button presses control Basic Lightness Controllers in the network by scene recall requests.","id":"com.silabs.sdk.stack.super:4.4.6._1150219681_Bluetooth Mesh - NLC Basic Scene Selector Low Power_asset:..com.silabs.sdk.stack.super_4.4.6.app.btmesh.demos.btmesh_soc_nlc_basic_scene_selector_low_power.btmesh_soc_nlc_basic_scene_selector_low_power-brd4166a.s37","text":"Bluetooth Mesh - NLC Basic Scene Selector Low Power","priority":0,"category":"DEMOS","toolTipText":"An out-of-the-box Software Demo where the device acts as a Basic Scene Selector in a Networked Lighting Control (NLC) system. It is optimized for low current consumption with disabled CLI, logging, and LCD. Push Button presses control Basic Lightness Controllers in the network by scene recall requests.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/btmesh/documentation/example/btmesh_soc_nlc_basic_scene_selector/readme_low_power.md"],"description":"An out-of-the-box Software Demo where the device acts as a Basic Scene Selector in a Networked Lighting Control (NLC) system. It is optimized for low current consumption with disabled CLI, logging, and LCD. Push Button presses control Basic Lightness Controllers in the network by scene recall requests.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.btmesh_soc_nlc_basic_scene_selector_low_power.example/btmesh_soc_nlc_basic_scene_selector/btmesh_soc_nlc_basic_scene_selector_low_power.slcp","text":"Bluetooth Mesh - NLC Basic Scene Selector Low Power","priority":9999999,"category":"SOFTWARE","toolTipText":"An out-of-the-box Software Demo where the device acts as a Basic Scene Selector in a Networked Lighting Control (NLC) system. It is optimized for low current consumption with disabled CLI, logging, and LCD. Push Button presses control Basic Lightness Controllers in the network by scene recall requests.\n"},{"imageURL":"bundleentry://52.fwk918423056/icons/run.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/btmesh/documentation/example/btmesh_soc_nlc_dimming_control/readme.md"],"description":"An out-of-the-box Software Demo where the device acts as a Dimming Control in a Networked Lighting Control (NLC) system. Push Button presses control Basic Lightness Controllers in the network by Generic Level Delta or Generic On/Off messages.","id":"com.silabs.sdk.stack.super:4.4.6._1150219681_Bluetooth Mesh - NLC Dimming Control_asset:..com.silabs.sdk.stack.super_4.4.6.app.btmesh.demos.btmesh_soc_nlc_dimming_control.btmesh_soc_nlc_dimming_control-brd4166a.s37","text":"Bluetooth Mesh - NLC Dimming Control","priority":0,"category":"DEMOS","toolTipText":"An out-of-the-box Software Demo where the device acts as a Dimming Control in a Networked Lighting Control (NLC) system. Push Button presses control Basic Lightness Controllers in the network by Generic Level Delta or Generic On/Off messages.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/btmesh/documentation/example/btmesh_soc_nlc_dimming_control/readme.md"],"description":"An out-of-the-box Software Demo where the device acts as a Dimming Control in a Networked Lighting Control (NLC) system. Push Button presses control Basic Lightness Controllers in the network by Generic Level Delta or Generic On/Off messages.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.btmesh_soc_nlc_dimming_control.example/btmesh_soc_nlc_dimming_control/btmesh_soc_nlc_dimming_control_log.slcp","text":"Bluetooth Mesh - NLC Dimming Control","priority":9999999,"category":"SOFTWARE","toolTipText":"An out-of-the-box Software Demo where the device acts as a Dimming Control in a Networked Lighting Control (NLC) system. Push Button presses control Basic Lightness Controllers in the network by Generic Level Delta or Generic On/Off messages.\n"},{"imageURL":"bundleentry://52.fwk918423056/icons/run.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/btmesh/documentation/example/btmesh_soc_nlc_dimming_control/readme_low_power.md"],"description":"An out-of-the-box Software Demo where the device acts as a Dimming Control in a Networked Lighting Control (NLC) system. It is optimized for low current consumption with disabled CLI, logging, and LCD. Push Button presses control Basic Lightness Controllers in the network by Generic Level Delta or Generic On/Off messages.","id":"com.silabs.sdk.stack.super:4.4.6._1150219681_Bluetooth Mesh - NLC Dimming Control Low Power_asset:..com.silabs.sdk.stack.super_4.4.6.app.btmesh.demos.btmesh_soc_nlc_dimming_control_low_power.btmesh_soc_nlc_dimming_control_low_power-brd4166a.s37","text":"Bluetooth Mesh - NLC Dimming Control Low Power","priority":0,"category":"DEMOS","toolTipText":"An out-of-the-box Software Demo where the device acts as a Dimming Control in a Networked Lighting Control (NLC) system. It is optimized for low current consumption with disabled CLI, logging, and LCD. Push Button presses control Basic Lightness Controllers in the network by Generic Level Delta or Generic On/Off messages.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/btmesh/documentation/example/btmesh_soc_nlc_dimming_control/readme_low_power.md"],"description":"An out-of-the-box Software Demo where the device acts as a Dimming Control in a Networked Lighting Control (NLC) system. It is optimized for low current consumption with disabled CLI, logging, and LCD. Push Button presses control Basic Lightness Controllers in the network by Generic Level Delta or Generic On/Off messages.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.btmesh_soc_nlc_dimming_control_low_power.example/btmesh_soc_nlc_dimming_control/btmesh_soc_nlc_dimming_control_low_power.slcp","text":"Bluetooth Mesh - NLC Dimming Control Low Power","priority":9999999,"category":"SOFTWARE","toolTipText":"An out-of-the-box Software Demo where the device acts as a Dimming Control in a Networked Lighting Control (NLC) system. It is optimized for low current consumption with disabled CLI, logging, and LCD. Push Button presses control Basic Lightness Controllers in the network by Generic Level Delta or Generic On/Off messages.\n"},{"imageURL":"bundleentry://52.fwk918423056/icons/run.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/btmesh/documentation/example/btmesh_soc_nlc_sensor_occupancy/readme.md"],"description":"An out-of-the-box Software Demo where the device acts as an Occupancy Sensor in a Networked Lighting Control (NLC) system. Push Button presses imitate people count changes which can control a properly configured NLC Basic Lightness Controller.","id":"com.silabs.sdk.stack.super:4.4.6._1150219681_Bluetooth Mesh - NLC Occupancy Sensor_asset:..com.silabs.sdk.stack.super_4.4.6.app.btmesh.demos.btmesh_soc_nlc_sensor_occupancy.btmesh_soc_nlc_sensor_occupancy-brd4166a.s37","text":"Bluetooth Mesh - NLC Occupancy Sensor","priority":0,"category":"DEMOS","toolTipText":"An out-of-the-box Software Demo where the device acts as an Occupancy Sensor in a Networked Lighting Control (NLC) system. Push Button presses imitate people count changes which can control a properly configured NLC Basic Lightness Controller.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/btmesh/documentation/example/btmesh_soc_nlc_sensor_occupancy/readme.md"],"description":"An out-of-the-box Software Demo where the device acts as an Occupancy Sensor in a Networked Lighting Control (NLC) system. Push Button presses imitate people count changes which can control a properly configured NLC Basic Lightness Controller.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.btmesh_soc_nlc_sensor_occupancy.example/btmesh_soc_nlc_sensor_occupancy/btmesh_soc_nlc_sensor_occupancy_tbsense.slcp","text":"Bluetooth Mesh - NLC Occupancy Sensor","priority":9999999,"category":"SOFTWARE","toolTipText":"An out-of-the-box Software Demo where the device acts as an Occupancy Sensor in a Networked Lighting Control (NLC) system. Push Button presses imitate people count changes which can control a properly configured NLC Basic Lightness Controller.\n"},{"imageURL":"bundleentry://52.fwk918423056/icons/run.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/btmesh/documentation/example/btmesh_soc_dfu_distributor/readme.md"],"description":"Demonstrates the Firmware Distributor role based on the BT Mesh Model specification. Distributor is responsible for delivering new firmware images to the Target nodes and monitoring the progress of the firmware update.","id":"com.silabs.sdk.stack.super:4.4.6._1150219681_Bluetooth Mesh - SoC DFU Distributor_asset:..com.silabs.sdk.stack.super_4.4.6.app.btmesh.demos.btmesh_soc_dfu_distributor.btmesh_soc_dfu_distributor-brd4166a.s37","text":"Bluetooth Mesh - SoC DFU Distributor","priority":0,"category":"DEMOS","toolTipText":"Demonstrates the Firmware Distributor role based on the BT Mesh Model specification. Distributor is responsible for delivering new firmware images to the Target nodes and monitoring the progress of the firmware update.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/btmesh/documentation/example/btmesh_soc_dfu_distributor/readme.md"],"description":"Demonstrates the Firmware Distributor role based on the BT Mesh Model specification. Distributor is responsible for delivering new firmware images to the Target nodes and monitoring the progress of the firmware update.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.btmesh_soc_dfu_distributor.example/btmesh_soc_dfu_distributor/btmesh_soc_dfu_distributor_log.slcp","text":"Bluetooth Mesh - SoC DFU Distributor","priority":9999999,"category":"SOFTWARE","toolTipText":"Demonstrates the Firmware Distributor role based on the BT Mesh Model specification. Distributor is responsible for delivering new firmware images to the Target nodes and monitoring the progress of the firmware update.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/btmesh/documentation/example/btmesh_soc_empty/readme.md"],"description":"Demonstrates the bare minimum needed for a Bluetooth Mesh C application. The application starts Unprovisioned Device Beaconing after booting, and then waits to be provisioned.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.btmesh_soc_empty.example/btmesh_soc_empty/btmesh_soc_empty.slcp","text":"Bluetooth Mesh - SoC Empty","priority":9999999,"category":"SOFTWARE","toolTipText":"Demonstrates the bare minimum needed for a Bluetooth Mesh C application. The application starts Unprovisioned Device Beaconing after booting, and then waits to be provisioned.\n"},{"imageURL":"bundleentry://52.fwk918423056/icons/run.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/btmesh/documentation/example/btmesh_soc_light_ctl/readme.md"],"description":"An out-of-the-box software demo where the LEDs of the Thunderboard Sense 2 board can be switched on and off, and their lighting intensity, color temperature, and delta UV can be set.","id":"com.silabs.sdk.stack.super:4.4.6._1150219681_Bluetooth Mesh - SoC Light CTL_asset:..com.silabs.sdk.stack.super_4.4.6.app.btmesh.demos.btmesh_soc_light_ctl.btmesh_soc_light_ctl-brd4166a.s37","text":"Bluetooth Mesh - SoC Light CTL","priority":0,"category":"DEMOS","toolTipText":"An out-of-the-box software demo where the LEDs of the Thunderboard Sense 2 board can be switched on and off, and their lighting intensity, color temperature, and delta UV can be set.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/btmesh/documentation/example/btmesh_soc_light_ctl/readme.md"],"description":"An out-of-the-box software demo where the LEDs of the Thunderboard Sense 2 board can be switched on and off, and their lighting intensity, color temperature, and delta UV can be set.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.btmesh_soc_light_ctl.example/btmesh_soc_light_ctl/btmesh_soc_light_ctl_brd4166a.slcp","text":"Bluetooth Mesh - SoC Light CTL","priority":9999999,"category":"SOFTWARE","toolTipText":"An out-of-the-box software demo where the LEDs of the Thunderboard Sense 2 board can be switched on and off, and their lighting intensity, color temperature, and delta UV can be set.\n"},{"imageURL":"bundleentry://52.fwk918423056/icons/run.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/btmesh/documentation/example/btmesh_soc_light_hsl/readme.md"],"description":"An out-of-the-box software demo where the LEDs of the Thunderboard Sense 2 can be switched on and off, and their lighting intensity, hue, and saturation can be set. The example also tries to establish friendship as a Friend node.","id":"com.silabs.sdk.stack.super:4.4.6._1150219681_Bluetooth Mesh - SoC Light HSL_asset:..com.silabs.sdk.stack.super_4.4.6.app.btmesh.demos.btmesh_soc_light_hsl.btmesh_soc_light_hsl-brd4166a.s37","text":"Bluetooth Mesh - SoC Light HSL","priority":0,"category":"DEMOS","toolTipText":"An out-of-the-box software demo where the LEDs of the Thunderboard Sense 2 can be switched on and off, and their lighting intensity, hue, and saturation can be set. The example also tries to establish friendship as a Friend node.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/btmesh/documentation/example/btmesh_soc_light_hsl/readme.md"],"description":"An out-of-the-box software demo where the LEDs of the Thunderboard Sense 2 can be switched on and off, and their lighting intensity, hue, and saturation can be set. The example also tries to establish friendship as a Friend node.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.btmesh_soc_light_hsl.example/btmesh_soc_light_hsl/btmesh_soc_light_hsl_brd4166a.slcp","text":"Bluetooth Mesh - SoC Light HSL","priority":9999999,"category":"SOFTWARE","toolTipText":"An out-of-the-box software demo where the LEDs of the Thunderboard Sense 2 can be switched on and off, and their lighting intensity, hue, and saturation can be set. The example also tries to establish friendship as a Friend node.\n"},{"imageURL":"bundleentry://52.fwk918423056/icons/run.svg","supportDocuments":[],"description":"An out-of-the-box software demo which can provision and configure nearby switch devices. The LEDs of the mainboard can be switched on and off and their lighting intensity can be set either by push buttons or by the provisioned switches.","id":"com.silabs.sdk.stack.super:4.4.6._1150219681_Bluetooth Mesh - SoC Provisioner Light Lightness_asset:..com.silabs.sdk.stack.super_4.4.6.app.btmesh.demos.btmesh_soc_provisioner_light_lightness.btmesh_soc_provisioner_light_lightness-brd4166a.s37","text":"Bluetooth Mesh - SoC Provisioner Light Lightness","priority":0,"category":"DEMOS","toolTipText":"An out-of-the-box software demo which can provision and configure nearby switch devices.\nThe LEDs of the mainboard can be switched on and off and their lighting intensity can be set either by push buttons or by the provisioned switches.\n"},{"imageURL":"bundleentry://52.fwk918423056/icons/run.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/btmesh/documentation/example/btmesh_soc_sensor_client/readme.md"],"description":"This example demonstrates the Bluetooth Mesh Sensor Client Model. It collects and displays sensor measurement data from remote device(s) (e.g., btmesh_soc_sensor_server).","id":"com.silabs.sdk.stack.super:4.4.6._1150219681_Bluetooth Mesh - SoC Sensor Client_asset:..com.silabs.sdk.stack.super_4.4.6.app.btmesh.demos.btmesh_soc_sensor_client.btmesh_soc_sensor_client-brd4166a.s37","text":"Bluetooth Mesh - SoC Sensor Client","priority":0,"category":"DEMOS","toolTipText":"This example demonstrates the Bluetooth Mesh Sensor Client Model. It collects and displays sensor measurement data from remote device(s) (e.g., btmesh_soc_sensor_server).\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/btmesh/documentation/example/btmesh_soc_sensor_client/readme.md"],"description":"This example demonstrates the Bluetooth Mesh Sensor Client Model. It collects and displays sensor measurement data from remote device(s) (e.g., btmesh_soc_sensor_server).","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.btmesh_soc_sensor_client.example/btmesh_soc_sensor_client/btmesh_soc_sensor_client_log.slcp","text":"Bluetooth Mesh - SoC Sensor Client","priority":9999999,"category":"SOFTWARE","toolTipText":"This example demonstrates the Bluetooth Mesh Sensor Client Model. It collects and displays sensor measurement data from remote device(s) (e.g., btmesh_soc_sensor_server).\n"},{"imageURL":"bundleentry://52.fwk918423056/icons/run.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/btmesh/documentation/example/btmesh_soc_sensor_server/readme.md"],"description":"This example demonstrates the Bluetooth Mesh Sensor Server Model and Sensor Setup Server Model. It measures temperature and sends the measurement data to a remote device (e.g., btmesh_soc_sensor_client).","id":"com.silabs.sdk.stack.super:4.4.6._1150219681_Bluetooth Mesh - SoC Sensor Thermometer_asset:..com.silabs.sdk.stack.super_4.4.6.app.btmesh.demos.btmesh_soc_sensor_thermometer.btmesh_soc_sensor_thermometer-brd4166a.s37","text":"Bluetooth Mesh - SoC Sensor Thermometer","priority":0,"category":"DEMOS","toolTipText":"This example demonstrates the Bluetooth Mesh Sensor Server Model and Sensor Setup Server Model. It measures temperature and sends the measurement data to a remote device (e.g., btmesh_soc_sensor_client).\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/btmesh/documentation/example/btmesh_soc_sensor_server/readme.md"],"description":"This example demonstrates the Bluetooth Mesh Sensor Server Model and Sensor Setup Server Model. It measures temperature and sends the measurement data to a remote device (e.g., btmesh_soc_sensor_client).","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.btmesh_soc_sensor_thermometer.example/btmesh_soc_sensor_thermometer/btmesh_soc_sensor_thermometer_tbsense.slcp","text":"Bluetooth Mesh - SoC Sensor Thermometer","priority":9999999,"category":"SOFTWARE","toolTipText":"This example demonstrates the Bluetooth Mesh Sensor Server Model and Sensor Setup Server Model. It measures temperature and sends the measurement data to a remote device (e.g., btmesh_soc_sensor_client).\n"},{"imageURL":"bundleentry://52.fwk918423056/icons/run.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/btmesh/documentation/example/btmesh_soc_switch/readme.md"],"description":"An out-of-the-box Software Demo where the device acts as a switch using the Light CTL Client Model. Push Button presses or CLI commands can control the lightness and color temperature of the LEDs on a remote device. Note - this example is not compatible with the Dimming Control NLC Profile.","id":"com.silabs.sdk.stack.super:4.4.6._1150219681_Bluetooth Mesh - SoC Switch CTL_asset:..com.silabs.sdk.stack.super_4.4.6.app.btmesh.demos.btmesh_soc_switch_ctl.btmesh_soc_switch_ctl-brd4166a.s37","text":"Bluetooth Mesh - SoC Switch CTL","priority":0,"category":"DEMOS","toolTipText":"An out-of-the-box Software Demo where the device acts as a switch using the Light CTL Client Model. Push Button presses or CLI commands can control the lightness and color temperature of the LEDs on a remote device.\nNote - this example is not compatible with the Dimming Control NLC Profile.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/btmesh/documentation/example/btmesh_soc_switch/readme.md"],"description":"An out-of-the-box Software Demo where the device acts as a switch using the Light CTL Client Model. Push Button presses or CLI commands can control the lightness and color temperature of the LEDs on a remote device. Note - this example is not compatible with the Dimming Control NLC Profile.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.btmesh_soc_switch_ctl.example/btmesh_soc_switch_ctl/btmesh_soc_switch_ctl_log.slcp","text":"Bluetooth Mesh - SoC Switch CTL","priority":9999999,"category":"SOFTWARE","toolTipText":"An out-of-the-box Software Demo where the device acts as a switch using the Light CTL Client Model. Push Button presses or CLI commands can control the lightness and color temperature of the LEDs on a remote device.\nNote - this example is not compatible with the Dimming Control NLC Profile.\n"},{"imageURL":"bundleentry://52.fwk918423056/icons/run.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/btmesh/documentation/example/btmesh_soc_switch/readme_low_power.md"],"description":"An out-of-the-box Software Demo where the device acts as a switch using the Light CTL Client Model. It is optimized for low current consumption with disabled CLI, logging, and LCD. Push Button presses or CLI commands can control the lightness and color temperature of the LEDs on a remote device. Note - this example is not compatible with the Dimming Control NLC Profile.","id":"com.silabs.sdk.stack.super:4.4.6._1150219681_Bluetooth Mesh - SoC Switch CTL Low Power_asset:..com.silabs.sdk.stack.super_4.4.6.app.btmesh.demos.btmesh_soc_switch_ctl_low_power.btmesh_soc_switch_ctl_low_power-brd4166a.s37","text":"Bluetooth Mesh - SoC Switch CTL Low Power","priority":0,"category":"DEMOS","toolTipText":"An out-of-the-box Software Demo where the device acts as a switch using the Light CTL Client Model. It is optimized for low current consumption with disabled CLI, logging, and LCD. Push Button presses or CLI commands can control the lightness and color temperature of the LEDs on a remote device.\nNote - this example is not compatible with the Dimming Control NLC Profile.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/btmesh/documentation/example/btmesh_soc_switch/readme_low_power.md"],"description":"An out-of-the-box Software Demo where the device acts as a switch using the Light CTL Client Model. It is optimized for low current consumption with disabled CLI, logging, and LCD. Push Button presses or CLI commands can control the lightness and color temperature of the LEDs on a remote device. Note - this example is not compatible with the Dimming Control NLC Profile.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.btmesh_soc_switch_ctl_low_power.example/btmesh_soc_switch_ctl/btmesh_soc_switch_ctl_low_power.slcp","text":"Bluetooth Mesh - SoC Switch CTL Low Power","priority":9999999,"category":"SOFTWARE","toolTipText":"An out-of-the-box Software Demo where the device acts as a switch using the Light CTL Client Model. It is optimized for low current consumption with disabled CLI, logging, and LCD. Push Button presses or CLI commands can control the lightness and color temperature of the LEDs on a remote device.\nNote - this example is not compatible with the Dimming Control NLC Profile.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/bluetooth/example/bt_rail_dmp_soc_empty/readme.md"],"description":"A minimal project structure, used as a starting point for custom Bluetooth + Proprietary DMP (Dynamic Multiprotocol) applications. It runs on top of FreeRTOS and multiprotocol RAIL.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.bt_rail_dmp_soc_empty_freertos.example/bt_rail_dmp_soc_empty/bt_rail_dmp_soc_empty_freertos.slcp","text":"Bluetooth RAIL DMP - SoC Empty FreeRTOS","priority":9999999,"category":"SOFTWARE","toolTipText":"A minimal project structure, used as a starting point for custom Bluetooth + Proprietary DMP (Dynamic Multiprotocol) applications. It runs on top of FreeRTOS and multiprotocol RAIL.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/bluetooth/example/bt_rail_dmp_soc_empty/readme.md"],"description":"A minimal project structure, used as a starting point for custom Bluetooth + Proprietary DMP (Dynamic Multiprotocol) applications. It runs on top of Micrium OS and multiprotocol RAIL.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.bt_rail_dmp_soc_empty_micriumos.example/bt_rail_dmp_soc_empty/bt_rail_dmp_soc_empty_micriumos.slcp","text":"Bluetooth RAIL DMP - SoC Empty Micrium OS","priority":9999999,"category":"SOFTWARE","toolTipText":"A minimal project structure, used as a starting point for custom Bluetooth + Proprietary DMP (Dynamic Multiprotocol) applications. It runs on top of Micrium OS and multiprotocol RAIL.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/bluetooth/example/bt_rail_dmp_soc_empty_std/readme.md"],"description":"A minimal project structure used as a starting point for custom Bluetooth + Standard DMP (Dynamic Multiprotocol) applications. It runs on top of FreeRTOS and multiprotocol RAIL utilizing IEEE 802.15.4 standard protocol.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.bt_rail_dmp_soc_empty_std_freertos.example/bt_rail_dmp_soc_empty_std/bt_rail_dmp_soc_empty_std_freertos.slcp","text":"Bluetooth RAIL DMP - SoC Empty Standard FreeRTOS","priority":9999999,"category":"SOFTWARE","toolTipText":"A minimal project structure used as a starting point for custom Bluetooth + Standard DMP (Dynamic Multiprotocol) applications. It runs on top of FreeRTOS and multiprotocol RAIL utilizing IEEE 802.15.4 standard protocol.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/bluetooth/example/bt_rail_dmp_soc_empty_std/readme.md"],"description":"A minimal project structure used as a starting point for custom Bluetooth + Standard DMP (Dynamic Multiprotocol) applications. It runs on top of Micrium OS and multiprotocol RAIL utilizing IEEE 802.15.4 standard protocol.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.bt_rail_dmp_soc_empty_std_micriumos.example/bt_rail_dmp_soc_empty_std/bt_rail_dmp_soc_empty_std_micriumos.slcp","text":"Bluetooth RAIL DMP - SoC Empty Standard Micrium OS","priority":9999999,"category":"SOFTWARE","toolTipText":"A minimal project structure used as a starting point for custom Bluetooth + Standard DMP (Dynamic Multiprotocol) applications. It runs on top of Micrium OS and multiprotocol RAIL utilizing IEEE 802.15.4 standard protocol.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/platform/bootloader/sample-apps/Series-1/bootloader-uart-bgapi/readme.md"],"description":"Standalone Bootloader using the BGAPI protocol for UART DFU. This is the recommended UART bootloader for the BLE protocol stack.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.bootloader-uart-bgapi.sample-apps/Series-1/bootloader-uart-bgapi/bootloader-uart-bgapi.slcp","text":"Bootloader - NCP BGAPI UART DFU","priority":9999999,"category":"SOFTWARE","toolTipText":"Standalone Bootloader using the BGAPI protocol for UART DFU. This is the recommended UART bootloader for the BLE protocol stack.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/platform/bootloader/sample-apps/Series-1/bootloader-spi-ezsp/readme.md"],"description":"Standalone Bootloader using the EZSP protocol over SPI. This is the recommended SPI bootloader for the EmberZNet and Connect protocol stacks.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.bootloader-spi-ezsp.sample-apps/Series-1/bootloader-spi-ezsp/bootloader-spi-ezsp.slcp","text":"Bootloader - NCP EZSP SPI","priority":9999999,"category":"SOFTWARE","toolTipText":"Standalone Bootloader using the EZSP protocol over SPI. This is the recommended SPI bootloader for the EmberZNet and Connect protocol stacks.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/platform/bootloader/sample-apps/Series-1/bootloader-uart-xmodem/readme.md"],"description":"Standalone Bootloader using XMODEM-CRC over UART. The bootloader shows a menu, where an XMODEM transfer can be started by sending ASCII '1', or the application can be started by sending ASCII '2'. This is the recommended UART bootloader for the EmberZNet and Connect protocol stacks.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.bootloader-uart-xmodem.sample-apps/Series-1/bootloader-uart-xmodem/bootloader-uart-xmodem.slcp","text":"Bootloader - NCP UART XMODEM","priority":9999999,"category":"SOFTWARE","toolTipText":"Standalone Bootloader using XMODEM-CRC over UART. The bootloader shows a menu, where an XMODEM transfer can be started by sending ASCII '1', or the application can be started by sending ASCII '2'. This is the recommended UART bootloader for the EmberZNet and Connect protocol stacks.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/platform/bootloader/sample-apps/Series-1/bootloader-storage-internal-ble/readme.md"],"description":"This sample configuration of the Gecko bootloader configures the bootloader to use the internal main flash to store firmware update images. The storage configuration is set up to store a single firmware update image at a time, in a single storage slot. The storage slot is configured to start at address 0x21800 (or 0x8021800 for device with 0x8000000 flash base), and have a size of 86 kB. This can be configured on the \"Software Components->Platform->Bootloader->Storage->Bootloader Storage Slot Setup\".","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.bootloader-storage-internal-ble.sample-apps/Series-1/bootloader-storage-internal-ble/bootloader-storage-internal-ble.slcp","text":"Bootloader - SoC Bluetooth in-place OTA DFU","priority":9999999,"category":"SOFTWARE","toolTipText":"This sample configuration of the Gecko bootloader configures the bootloader to use the internal main flash to store firmware update images. The storage configuration is set up to store a single firmware update image at a time, in a single storage slot. The storage slot is configured to start at address 0x21800 (or 0x8021800 for device with 0x8000000 flash base), and have a size of 86 kB. This can be configured on the \"Software Components->Platform->Bootloader->Storage->Bootloader Storage Slot Setup\".\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/platform/bootloader/sample-apps/Series-1/bootloader-storage-internal/readme.md"],"description":"Application Bootloader for all EFR32 and EFM32 devices with 1MB or larger flash, using the internal flash memory to store upgrade images received by the application over the air in an application specific way. This sample configuration supports storing multiple firmware update images simultaneously by configuring multiple storage slots. The storage layout is designed for 1024 kB EFR32xG12 devices, and the layout of the storage should be modified before being run on other devices.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.bootloader-storage-internal.sample-apps/Series-1/bootloader-storage-internal/bootloader-storage-internal.slcp","text":"Bootloader - SoC Internal Storage (multiple images on 1MB device)","priority":9999999,"category":"SOFTWARE","toolTipText":"Application Bootloader for all EFR32 and EFM32 devices with 1MB or larger flash, using the internal flash memory to store upgrade images received by the application over the air in an application specific way. This sample configuration supports storing multiple firmware update images simultaneously by configuring multiple storage slots. The storage layout is designed for 1024 kB EFR32xG12 devices, and the layout of the storage should be modified before being run on other devices.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/platform/bootloader/sample-apps/Series-1/bootloader-storage-internal-single/readme.md"],"description":"This sample configuration of the Gecko bootloader configures the bootloader to use the internal main flash to store firmware update images. The storage configuration is set up to store a single firmware update image at a time, in a single storage slot. The storage slot is configured to start at address 0x84000 (or 0x8084000 for device with 0x8000000 flash base), and have a size of 448 kB. This can be configured on the \"Storage\" tab.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.bootloader-storage-internal-single.sample-apps/Series-1/bootloader-storage-internal-single/bootloader-storage-internal-single.slcp","text":"Bootloader - SoC Internal Storage (single image on 1MB device)","priority":9999999,"category":"SOFTWARE","toolTipText":"This sample configuration of the Gecko bootloader configures the bootloader to use the internal main flash to store firmware update images. The storage configuration is set up to store a single firmware update image at a time, in a single storage slot. The storage slot is configured to start at address 0x84000 (or 0x8084000 for device with 0x8000000 flash base), and have a size of 448 kB. This can be configured on the \"Storage\" tab.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/platform/bootloader/sample-apps/Series-1/bootloader-storage-internal-single-352k/readme.md"],"description":"This sample configuration of the Gecko bootloader configures the bootloader to use the internal main flash to store firmware update images. The storage configuration is set up to store a single firmware update image at a time, in a single storage slot. The storage slot is configured to start at address 0x28000 (or 0x8028000 for device with 0x8000000 flash base), and have a size of 120 kB. This can be configured on the \"Storage\" tab.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.bootloader-storage-internal-single-352k.sample-apps/Series-1/bootloader-storage-internal-single-352k/bootloader-storage-internal-single-352k.slcp","text":"Bootloader - SoC Internal Storage (single image on 352kB device)","priority":9999999,"category":"SOFTWARE","toolTipText":"This sample configuration of the Gecko bootloader configures the bootloader to use the internal main flash to store firmware update images. The storage configuration is set up to store a single firmware update image at a time, in a single storage slot. The storage slot is configured to start at address 0x28000 (or 0x8028000 for device with 0x8000000 flash base), and have a size of 120 kB. This can be configured on the \"Storage\" tab.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/platform/bootloader/sample-apps/Series-1/bootloader-storage-internal-single-512k/readme.md"],"description":"This sample configuration of the Gecko bootloader configures the bootloader to use the internal main flash to store firmware update images. The storage configuration is set up to store a single firmware update image at a time, in a single storage slot. The storage slot is configured to start at address 0x44000 (or 0x8044000 for device with 0x8000000 flash base), and have a size of 192 kB. This can be configured on the \"Storage\" tab.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.bootloader-storage-internal-single-512k.sample-apps/Series-1/bootloader-storage-internal-single-512k/bootloader-storage-internal-single-512k.slcp","text":"Bootloader - SoC Internal Storage (single image on 512kB device)","priority":9999999,"category":"SOFTWARE","toolTipText":"This sample configuration of the Gecko bootloader configures the bootloader to use the internal main flash to store firmware update images. The storage configuration is set up to store a single firmware update image at a time, in a single storage slot. The storage slot is configured to start at address 0x44000 (or 0x8044000 for device with 0x8000000 flash base), and have a size of 192 kB. This can be configured on the \"Storage\" tab.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/platform/bootloader/sample-apps/Series-1/bootloader-storage-internal-single-768k/readme.md"],"description":"This sample configuration of the Gecko bootloader configures the bootloader to use the internal main flash to store firmware update images. The storage configuration is set up to store a single firmware update image at a time, in a single storage slot. The storage slot is configured to start at address 0x5C000 (or 0x805C000 for device with 0x8000000 flash base), and have a size of 368 kB. This can be configured on the \"Storage\" tab.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.bootloader-storage-internal-single-768k.sample-apps/Series-1/bootloader-storage-internal-single-768k/bootloader-storage-internal-single-768k.slcp","text":"Bootloader - SoC Internal Storage (single image on 768kB device)","priority":9999999,"category":"SOFTWARE","toolTipText":"This sample configuration of the Gecko bootloader configures the bootloader to use the internal main flash to store firmware update images. The storage configuration is set up to store a single firmware update image at a time, in a single storage slot. The storage slot is configured to start at address 0x5C000 (or 0x805C000 for device with 0x8000000 flash base), and have a size of 368 kB. This can be configured on the \"Storage\" tab.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/platform/bootloader/sample-apps/Series-1/bootloader-storage-internal-single-lzma/readme.md"],"description":"This sample configuration of the Gecko bootloader configures the bootloader to use the internal main flash to store firmware update images. The storage configuration is set up to store a single firmware update image at a time, in a single storage slot. The storage slot is configured to start at address 0x84000 (or 0x8084000 for device with 0x8000000 flash base), and have a size of 448 kB. This can be configured on the \"Storage\" tab.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.bootloader-storage-internal-single-lzma.sample-apps/Series-1/bootloader-storage-internal-single-lzma/bootloader-storage-internal-single-lzma.slcp","text":"Bootloader - SoC Internal Storage (single image with LZMA compression, 1MB flash)","priority":9999999,"category":"SOFTWARE","toolTipText":"This sample configuration of the Gecko bootloader configures the bootloader to use the internal main flash to store firmware update images. The storage configuration is set up to store a single firmware update image at a time, in a single storage slot. The storage slot is configured to start at address 0x84000 (or 0x8084000 for device with 0x8000000 flash base), and have a size of 448 kB. This can be configured on the \"Storage\" tab.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/platform/bootloader/sample-apps/Series-1/bootloader-storage-spiflash/readme.md"],"description":"This sample configuration of the Gecko bootloader configures the bootloader to use an external SPI flash to store firmware update images. The storage configuration is set up to store up to two firmware update images at a time, in two storage slots. The storage slots are configured to start at address 0x2000 and 0x41000 of the SPI flash respectively, and have a size of 252 kB. This can be configured on the \"Storage\" tab.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.bootloader-storage-spiflash.sample-apps/Series-1/bootloader-storage-spiflash/bootloader-storage-spiflash.slcp","text":"Bootloader - SoC SPI Flash Storage (multiple images)","priority":9999999,"category":"SOFTWARE","toolTipText":"This sample configuration of the Gecko bootloader configures the bootloader to use an external SPI flash to store firmware update images. The storage configuration is set up to store up to two firmware update images at a time, in two storage slots. The storage slots are configured to start at address 0x2000 and 0x41000 of the SPI flash respectively, and have a size of 252 kB. This can be configured on the \"Storage\" tab.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/platform/bootloader/sample-apps/Series-1/bootloader-storage-spiflash-single-1024k/readme.md"],"description":"This sample configuration of the Gecko bootloader configures the bootloader to use an external SPI flash to store firmware update images. The storage configuration is set up to store a single firmware update image at a time, in a single storage slot. The storage slot is configured to start at address 0x0 of the SPI flash, and have a size of 1024 kB. This can be configured on the \"Storage\" tab.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.bootloader-storage-spiflash-single-1024k.sample-apps/Series-1/bootloader-storage-spiflash-single-1024k/bootloader-storage-spiflash-single-1024k.slcp","text":"Bootloader - SoC SPI Flash Storage (single image with slot size of 1024kB)","priority":9999999,"category":"SOFTWARE","toolTipText":"This sample configuration of the Gecko bootloader configures the bootloader to use an external SPI flash to store firmware update images. The storage configuration is set up to store a single firmware update image at a time, in a single storage slot. The storage slot is configured to start at address 0x0 of the SPI flash, and have a size of 1024 kB. This can be configured on the \"Storage\" tab.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/platform/bootloader/sample-apps/Series-1/bootloader-storage-spiflash-single/readme.md"],"description":"This sample configuration of the Gecko bootloader configures the bootloader to use an external SPI flash to store firmware update images. The storage configuration is set up to store a single firmware update image at a time, in a single storage slot. The storage slot is configured to start at address 0x0 of the SPI flash, and have a size of 512 kB. This can be configured on the \"Storage\" tab.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.bootloader-storage-spiflash-single.sample-apps/Series-1/bootloader-storage-spiflash-single/bootloader-storage-spiflash-single.slcp","text":"Bootloader - SoC SPI Flash Storage (single image)","priority":9999999,"category":"SOFTWARE","toolTipText":"This sample configuration of the Gecko bootloader configures the bootloader to use an external SPI flash to store firmware update images. The storage configuration is set up to store a single firmware update image at a time, in a single storage slot. The storage slot is configured to start at address 0x0 of the SPI flash, and have a size of 512 kB. This can be configured on the \"Storage\" tab.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/platform/bootloader/sample-apps/Series-1/bootloader-storage-spiflash-sfdp-single/readme.md"],"description":"This sample configuration of the Gecko bootloader configures the bootloader to use an external SPI flash to store firmware update images. The SPI flash type is detected automatically by querying the SFDP parameter table present inside the flash memory. The storage configuration is set up to store a single firmware update image at a time, in a single storage slot. The storage slot is configured to start at address 0x0 of the SPI flash, and have a size of 512 kB. This can be configured on the \"Storage\" tab.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.bootloader-storage-spiflash-sfdp-single.sample-apps/Series-1/bootloader-storage-spiflash-sfdp-single/bootloader-storage-spiflash-sfdp-single.slcp","text":"Bootloader - SoC SPI Flash Storage using SFDP (single image)","priority":9999999,"category":"SOFTWARE","toolTipText":"This sample configuration of the Gecko bootloader configures the bootloader to use an external SPI flash to store firmware update images. The SPI flash type is detected automatically by querying the SFDP parameter table present inside the flash memory. The storage configuration is set up to store a single firmware update image at a time, in a single storage slot. The storage slot is configured to start at address 0x0 of the SPI flash, and have a size of 512 kB. This can be configured on the \"Storage\" tab.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/flex/documentation/example/connect/connect_ncp_app/readme.md"],"description":"Connect: NCP Application for the SoC","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.connect_ncp.../../protocol/flex/app/ncp-app/connect_ncp.slcp","text":"Connect - NCP","priority":9999999,"category":"SOFTWARE","toolTipText":"Connect: NCP Application for the SoC"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/flex/documentation/example/connect/connect_soc_direct_mode_device/readme.md"],"description":"This sample app allows direct commissioning of nodes and exchange data between them via CLI commands.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.connect_soc_direct_mode_device.example/connect/connect_soc_direct_mode_device/connect_soc_direct_mode_device.slcp","text":"Connect - SoC Direct Mode Device","priority":9999999,"category":"SOFTWARE","toolTipText":"This sample app allows direct commissioning of nodes and exchange data between them via CLI commands."},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/flex/documentation/example/connect/connect_soc_ecdh_key_exchange/readme.md"],"description":"This sample application illustrates how to share the network key between multiple devices in a secure way (using Elliptic-curve Diffie-Hellman (ECDH) key agreement protocol).","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.connect_soc_ecdh_key_exchange.example/connect/connect_soc_ecdh_key_exchange/connect_soc_ecdh_key_exchange.slcp","text":"Connect - SoC ECDH Key Exchange","priority":9999999,"category":"SOFTWARE","toolTipText":"This sample application illustrates how to share the network key between multiple devices in a secure way (using Elliptic-curve Diffie-Hellman (ECDH) key agreement protocol)."},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/flex/documentation/example/connect/connect_soc_empty/readme.md"],"description":"The Connect Empty project is a barebone Connect app that can be a basis of streamlined proprietary solutions.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.connect_soc_empty.example/connect/connect_soc_empty/connect_soc_empty.slcp","text":"Connect - SoC Empty","priority":9999999,"category":"SOFTWARE","toolTipText":"The Connect Empty project is a barebone Connect app that can be a basis of streamlined proprietary solutions."},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/flex/documentation/example/connect/connect_soc_mac_mode_device/readme.md"],"description":"A 802.15.4 sample app that provides CLI commands to form a network or join an existing network, send data to another node based on short or long addresses.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.connect_soc_mac_mode_device.example/connect/connect_soc_mac_mode_device/connect_soc_mac_mode_device.slcp","text":"Connect - SoC MAC Mode Device","priority":9999999,"category":"SOFTWARE","toolTipText":"A 802.15.4 sample app that provides CLI commands to form a network or join an existing network, send data to another node based on short or long addresses."},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/flex/documentation/example/connect/connect_sink_sensor/readme.md"],"description":"Demonstrates how to properly setup a star network topology in which communication occurs in both directions between the Sink and the Sensor nodes. The PB0 pushbutton can be used to enable or disable sleep, combined with changing the VCOM option 'Enable reception when sleeping.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.connect_soc_sensor.example/connect/sensor_sink/connect_soc_sensor/connect_soc_sensor.slcp","text":"Connect - SoC Sensor","priority":9999999,"category":"SOFTWARE","toolTipText":"Demonstrates how to properly setup a star network topology in which communication occurs in both directions between the Sink and the Sensor nodes. The PB0 pushbutton can be used to enable or disable sleep, combined with changing the VCOM option 'Enable reception when sleeping."},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/flex/documentation/example/connect/connect_sink_sensor/readme.md"],"description":"The Sink example is the counterpart of the Sensor example. It receives reports of Sensor nodes joining to its network.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.connect_soc_sink.example/connect/sensor_sink/connect_soc_sink/connect_soc_sink.slcp","text":"Connect - SoC Sink","priority":9999999,"category":"SOFTWARE","toolTipText":"The Sink example is the counterpart of the Sensor example. It receives reports of Sensor nodes joining to its network."},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/flex/documentation/example/connect/connect_dmp_light_switch/readme.md"],"description":"The purpose of the application is to demonstrate a simple wireless communication between two or more boards, using the connect SDK. In combination with the Connect Light DMP sample application it creates a basic switch functionality, where the LEDs can be toggled in the Light node. After power up, the Light (network coordinator) create its own local network, and the Switch modules (low power end-nodes) can join to this network, and control the Light node. If a local network is established with the - form - CLI command, the Switch nodes can join with the - join - CLI command. After that point, the Light can be controlled with pushing the PB1 button on any connected Switch node.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.connect_soc_switch.example/connect/light_switch/connect_soc_switch/connect_soc_switch.slcp","text":"Connect - SoC Switch","priority":9999999,"category":"SOFTWARE","toolTipText":"The purpose of the application is to demonstrate a simple wireless communication between two or more boards, using the connect SDK. In combination with the Connect Light DMP sample application it creates a basic switch functionality, where the LEDs can be toggled in the Light node. After power up, the Light (network coordinator) create its own local network, and the Switch modules (low power end-nodes) can join to this network, and control the Light node. If a local network is established with the - form - CLI command, the Switch nodes can join with the - join - CLI command. After that point, the Light can be controlled with pushing the PB1 button on any connected Switch node."},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/flex/documentation/example/connect/connect_bt_dmp_soc_empty/readme.md"],"description":"The Connect Empty DMP example is an RTOS-based project that provides a skeleton for Connect but not functions, beside a BLE Task with a basic CLI interface.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.connect_bt_dmp_soc_empty.example/connect/connect_bt_dmp_soc_empty/connect_bt_dmp_soc_empty.slcp","text":"Connect Bluetooth DMP - SoC Empty","priority":9999999,"category":"SOFTWARE","toolTipText":"The Connect Empty DMP example is an RTOS-based project that provides a skeleton for Connect but not functions, beside a BLE Task with a basic CLI interface."},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/flex/documentation/example/connect/connect_dmp_light_switch/readme.md"],"description":"The purpose of the application is to demonstrate a simple wireless communication between two or more boards, using the connect SDK. In combination with the Connect-Switch sample application, it creates a basic light functionality, where the LEDs can be toggled on the Light node. After power up, the Light (network coordinator) create its own local network, and the Switch modules (low power end-nodes) can join to this network, and control the Light node. If a local network is established with the - form - CLI command, the Switch nodes can join with the - join - CLI command. After that point, the Light can be controlled with pushing the PB1 button on any connected Switch node.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.connect_bt_dmp_soc_light.example/connect/light_switch/connect_bt_dmp_soc_light/connect_bt_dmp_soc_light.slcp","text":"Connect Bluetooth DMP - SoC Light","priority":9999999,"category":"SOFTWARE","toolTipText":"The purpose of the application is to demonstrate a simple wireless communication between two or more boards, using the connect SDK. In combination with the Connect-Switch sample application, it creates a basic light functionality, where the LEDs can be toggled on the Light node. After power up, the Light (network coordinator) create its own local network, and the Switch modules (low power end-nodes) can join to this network, and control the Light node. If a local network is established with the - form - CLI command, the Switch nodes can join with the - join - CLI command. After that point, the Light can be controlled with pushing the PB1 button on any connected Switch node."},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":[],"description":"This example project shows an empty configuration that can be used as a starting point to add components and functionality.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.cExeProject","text":"Empty C Project","priority":1,"category":"SOFTWARE","toolTipText":"This example project shows an empty configuration that can be used as a starting point to add components and functionality."},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":[],"description":"This example project shows an empty configuration that can be used as a starting point to add components and functionality.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.cppExeProject","text":"Empty C++ Project","priority":1,"category":"SOFTWARE","toolTipText":"This example project shows an empty configuration that can be used as a starting point to add components and functionality."},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/common/example/ml_audio_classifier/readme.md"],"description":"This application uses TensorFlow Lite for Microcontrollers to classify audio data recorded on the microphone in a Micrium OS kernel task. The classification is used to control a LED on the board.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.ml_audio_classifier.example/ml_audio_classifier/ml_audio_classifier.slcp","text":"Machine Learning - Audio Classifier","priority":9999999,"category":"SOFTWARE","toolTipText":"This application uses TensorFlow Lite for Microcontrollers to classify audio data recorded on the microphone in a Micrium OS kernel task. The classification is used to control a LED on the board.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/common/example/ml_blink/readme.md"],"description":"This application demonstrates a model trained to replicate a sine function.  The model is continuously fed with values ranging from 0 to 2pi, and the  output of the model is used to control the intensity of an LED.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.ml_blink.example/ml_blink/ml_blink.slcp","text":"Machine Learning - Blink","priority":9999999,"category":"SOFTWARE","toolTipText":"This application demonstrates a model trained to replicate a sine function.  The model is continuously fed with values ranging from 0 to 2pi, and the  output of the model is used to control the intensity of an LED. \n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/common/example/ml_magic_wand/readme.md"],"description":"This application demonstrates a model trained to recognize various hand gestures with an accelerometer. The detected gestures are printed to the serial port.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.ml_magic_wand.example/ml_magic_wand/ml_magic_wand.slcp","text":"Machine Learning - Magic Wand","priority":9999999,"category":"SOFTWARE","toolTipText":"This application demonstrates a model trained to recognize various hand gestures with an accelerometer. The detected gestures are printed to the serial port.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/common/example/ml_model_profiler/readme.md"],"description":"This application profiles a ML model. The ML model is loaded as a byte array which is generated from a Tensorflow tflite model file. Profiling is performed by running one inference with the model.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.ml_model_profiler.example/ml_model_profiler/ml_model_profiler.slcp","text":"Machine Learning - Model Profiler","priority":9999999,"category":"SOFTWARE","toolTipText":"This application profiles a ML model. The ML model is loaded as a byte array which is generated from a Tensorflow tflite model file. Profiling is performed by running one inference with the model.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/common/example/ml_voice_control_light/readme.md"],"description":"This application uses TensorFlow Lite for Microcontrollers to detect the spoken words \"on\" and \"off\" from audio data recorded on the microphone in a Micrium OS kernel task. The detected keywords are used to control an LED on the board.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.ml_voice_control_light.example/ml_voice_control_light/ml_voice_control_light.slcp","text":"Machine Learning - Voice Control Light","priority":9999999,"category":"SOFTWARE","toolTipText":"This application uses TensorFlow Lite for Microcontrollers to detect the spoken words \"on\" and \"off\" from audio data recorded on the microphone in a Micrium OS kernel task. The detected keywords are used to control an LED on the board.\n"},{"imageURL":"bundleentry://52.fwk918423056/icons/run.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/protocol/openthread/sample-apps/ot-ncp/README-MP-RCP.md"],"description":"This multiprotocol radio co-processor (RCP) application supports running OpenThread and Zigbee stacks simultaneously on a host processor. It uses concurrent multiprotocol (CMP) / multi-PAN functionality to run the 802.15.4 networks simultaneously on the same channel. The host stacks and the RCP communicate using the Co-Processor Communication protocol (CPC), which acts as a protocol multiplexer and serial transport layer. The host applications connect to the CPC daemon, which in turn connects to the EFR via a SPI link. Refer to *AN1333: Running Zigbee, OpenThread, and Bluetooth Concurrently on a Linux Host with a Multiprotocol Co-processor* for more information on running the multiprotocol RCP with different host applications.","id":"com.silabs.sdk.stack.super:4.4.6._1150219681_Multiprotocol (OpenThread+Zigbee) - RCP (SPI)_asset:..com.silabs.sdk.stack.super_4.4.6.protocol.openthread.demos.rcp-spi-802154.rcp-spi-802154-brd4166a.s37","text":"Multiprotocol (OpenThread+Zigbee) - RCP (SPI)","priority":0,"category":"DEMOS","toolTipText":"This multiprotocol radio co-processor (RCP) application supports running OpenThread and Zigbee stacks simultaneously on a host processor. It uses concurrent multiprotocol (CMP) / multi-PAN functionality to run the 802.15.4 networks simultaneously on the same channel. The host stacks and the RCP communicate using the Co-Processor Communication protocol (CPC), which acts as a protocol multiplexer and serial transport layer. The host applications connect to the CPC daemon, which in turn connects to the EFR via a SPI link. Refer to *AN1333: Running Zigbee, OpenThread, and Bluetooth Concurrently on a Linux Host with a Multiprotocol Co-processor* for more information on running the multiprotocol RCP with different host applications.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/protocol/openthread/sample-apps/ot-ncp/README-MP-RCP.md"],"description":"This multiprotocol radio co-processor (RCP) application supports running OpenThread and Zigbee stacks simultaneously on a host processor. It uses concurrent multiprotocol (CMP) / multi-PAN functionality to run the 802.15.4 networks simultaneously on the same channel. The host stacks and the RCP communicate using the Co-Processor Communication protocol (CPC), which acts as a protocol multiplexer and serial transport layer. The host applications connect to the CPC daemon, which in turn connects to the EFR via a SPI link. Refer to *AN1333: Running Zigbee, OpenThread, and Bluetooth Concurrently on a Linux Host with a Multiprotocol Co-processor* for more information on running the multiprotocol RCP with different host applications.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.rcp-spi-802154.sample-apps/ot-ncp/rcp-spi-802154.slcp","text":"Multiprotocol (OpenThread+Zigbee) - RCP (SPI)","priority":9999999,"category":"SOFTWARE","toolTipText":"This multiprotocol radio co-processor (RCP) application supports running OpenThread and Zigbee stacks simultaneously on a host processor. It uses concurrent multiprotocol (CMP) / multi-PAN functionality to run the 802.15.4 networks simultaneously on the same channel. The host stacks and the RCP communicate using the Co-Processor Communication protocol (CPC), which acts as a protocol multiplexer and serial transport layer. The host applications connect to the CPC daemon, which in turn connects to the EFR via a SPI link. Refer to *AN1333: Running Zigbee, OpenThread, and Bluetooth Concurrently on a Linux Host with a Multiprotocol Co-processor* for more information on running the multiprotocol RCP with different host applications.\n"},{"imageURL":"bundleentry://52.fwk918423056/icons/run.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/protocol/openthread/sample-apps/ot-ncp/README-MP-RCP.md"],"description":"This multiprotocol radio co-processor (RCP) application supports running OpenThread and Zigbee stacks simultaneously on a host processor. It uses concurrent multiprotocol (CMP) / multi-PAN functionality to run the 802.15.4 networks simultaneously on the same channel. The host stacks and the RCP communicate using the Co-Processor Communication protocol (CPC), which acts as a protocol multiplexer and serial transport layer. The host applications connect to the CPC daemon, which in turn connects to the EFR via a UART link. Refer to *AN1333: Running Zigbee, OpenThread, and Bluetooth Concurrently on a Linux Host with a Multiprotocol Co-processor* for more information on running the multiprotocol RCP with different host applications.","id":"com.silabs.sdk.stack.super:4.4.6._1150219681_Multiprotocol (OpenThread+Zigbee) - RCP (UART)_asset:..com.silabs.sdk.stack.super_4.4.6.protocol.openthread.demos.rcp-uart-802154.rcp-uart-802154-brd4166a.s37","text":"Multiprotocol (OpenThread+Zigbee) - RCP (UART)","priority":0,"category":"DEMOS","toolTipText":"This multiprotocol radio co-processor (RCP) application supports running OpenThread and Zigbee stacks simultaneously on a host processor. It uses concurrent multiprotocol (CMP) / multi-PAN functionality to run the 802.15.4 networks simultaneously on the same channel. The host stacks and the RCP communicate using the Co-Processor Communication protocol (CPC), which acts as a protocol multiplexer and serial transport layer. The host applications connect to the CPC daemon, which in turn connects to the EFR via a UART link. Refer to *AN1333: Running Zigbee, OpenThread, and Bluetooth Concurrently on a Linux Host with a Multiprotocol Co-processor* for more information on running the multiprotocol RCP with different host applications.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/protocol/openthread/sample-apps/ot-ncp/README-MP-RCP.md"],"description":"This multiprotocol radio co-processor (RCP) application supports running OpenThread and Zigbee stacks simultaneously on a host processor. It uses concurrent multiprotocol (CMP) / multi-PAN functionality to run the 802.15.4 networks simultaneously on the same channel. The host stacks and the RCP communicate using the Co-Processor Communication protocol (CPC), which acts as a protocol multiplexer and serial transport layer. The host applications connect to the CPC daemon, which in turn connects to the EFR via a UART link. Refer to *AN1333: Running Zigbee, OpenThread, and Bluetooth Concurrently on a Linux Host with a Multiprotocol Co-processor* for more information on running the multiprotocol RCP with different host applications.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.rcp-uart-802154.sample-apps/ot-ncp/rcp-uart-802154.slcp","text":"Multiprotocol (OpenThread+Zigbee) - RCP (UART)","priority":9999999,"category":"SOFTWARE","toolTipText":"This multiprotocol radio co-processor (RCP) application supports running OpenThread and Zigbee stacks simultaneously on a host processor. It uses concurrent multiprotocol (CMP) / multi-PAN functionality to run the 802.15.4 networks simultaneously on the same channel. The host stacks and the RCP communicate using the Co-Processor Communication protocol (CPC), which acts as a protocol multiplexer and serial transport layer. The host applications connect to the CPC daemon, which in turn connects to the EFR via a UART link. Refer to *AN1333: Running Zigbee, OpenThread, and Bluetooth Concurrently on a Linux Host with a Multiprotocol Co-processor* for more information on running the multiprotocol RCP with different host applications.\n"},{"imageURL":"bundleentry://52.fwk918423056/icons/run.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/protocol/openthread/sample-apps/ot-ncp/README-MP-DMP-RCP.md"],"description":"This multiprotocol radio co-processor (RCP) application supports running OpenThread, Zigbee, and Bluetooth stacks simultaneously on a host processor. It uses concurrent multiprotocol (CMP) / multi-PAN functionality to run the 802.15.4 networks simultaneously on the same channel, and dynamic multiprotocol (DMP) to run the Bluetooth Link Layer simultaneously. The host stacks and the RCP communicate using the Co-Processor Communication protocol (CPC), which acts as a protocol multiplexer and serial transport layer. The host applications connect to the CPC daemon, which in turn connects to the EFR via a SPI link. Refer to *AN1333: Running Zigbee, OpenThread, and Bluetooth Concurrently on a Linux Host with a Multiprotocol Co-processor* for more information on running the multiprotocol RCP with different host applications.","id":"com.silabs.sdk.stack.super:4.4.6._1150219681_Multiprotocol (OpenThread+Zigbee+BLE) - RCP (SPI)_asset:..com.silabs.sdk.stack.super_4.4.6.protocol.openthread.demos.rcp-spi-802154-blehci.rcp-spi-802154-blehci-brd4166a.s37","text":"Multiprotocol (OpenThread+Zigbee+BLE) - RCP (SPI)","priority":0,"category":"DEMOS","toolTipText":"This multiprotocol radio co-processor (RCP) application supports running OpenThread, Zigbee, and Bluetooth stacks simultaneously on a host processor. It uses concurrent multiprotocol (CMP) / multi-PAN functionality to run the 802.15.4 networks simultaneously on the same channel, and dynamic multiprotocol (DMP) to run the Bluetooth Link Layer simultaneously. The host stacks and the RCP communicate using the Co-Processor Communication protocol (CPC), which acts as a protocol multiplexer and serial transport layer. The host applications connect to the CPC daemon, which in turn connects to the EFR via a SPI link. Refer to *AN1333: Running Zigbee, OpenThread, and Bluetooth Concurrently on a Linux Host with a Multiprotocol Co-processor* for more information on running the multiprotocol RCP with different host applications.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/protocol/openthread/sample-apps/ot-ncp/README-MP-DMP-RCP.md"],"description":"This multiprotocol radio co-processor (RCP) application supports running OpenThread, Zigbee, and Bluetooth stacks simultaneously on a host processor. It uses concurrent multiprotocol (CMP) / multi-PAN functionality to run the 802.15.4 networks simultaneously on the same channel, and dynamic multiprotocol (DMP) to run the Bluetooth Link Layer simultaneously. The host stacks and the RCP communicate using the Co-Processor Communication protocol (CPC), which acts as a protocol multiplexer and serial transport layer. The host applications connect to the CPC daemon, which in turn connects to the EFR via a SPI link. Refer to *AN1333: Running Zigbee, OpenThread, and Bluetooth Concurrently on a Linux Host with a Multiprotocol Co-processor* for more information on running the multiprotocol RCP with different host applications.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.rcp-spi-802154-blehci.sample-apps/ot-ncp/rcp-spi-802154-blehci.slcp","text":"Multiprotocol (OpenThread+Zigbee+BLE) - RCP (SPI)","priority":9999999,"category":"SOFTWARE","toolTipText":"This multiprotocol radio co-processor (RCP) application supports running OpenThread, Zigbee, and Bluetooth stacks simultaneously on a host processor. It uses concurrent multiprotocol (CMP) / multi-PAN functionality to run the 802.15.4 networks simultaneously on the same channel, and dynamic multiprotocol (DMP) to run the Bluetooth Link Layer simultaneously. The host stacks and the RCP communicate using the Co-Processor Communication protocol (CPC), which acts as a protocol multiplexer and serial transport layer. The host applications connect to the CPC daemon, which in turn connects to the EFR via a SPI link. Refer to *AN1333: Running Zigbee, OpenThread, and Bluetooth Concurrently on a Linux Host with a Multiprotocol Co-processor* for more information on running the multiprotocol RCP with different host applications.\n"},{"imageURL":"bundleentry://52.fwk918423056/icons/run.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/protocol/openthread/sample-apps/ot-ncp/README-MP-DMP-RCP.md"],"description":"This multiprotocol radio co-processor (RCP) application supports running OpenThread, Zigbee, and Bluetooth stacks simultaneously on a host processor. It uses concurrent multiprotocol (CMP) / multi-PAN functionality to run the 802.15.4 networks simultaneously on the same channel, and dynamic multiprotocol (DMP) to run the Bluetooth Link Layer simultaneously. The host stacks and the RCP communicate using the Co-Processor Communication protocol (CPC), which acts as a protocol multiplexer and serial transport layer. The host applications connect to the CPC daemon, which in turn connects to the EFR via a UART link. Refer to *AN1333: Running Zigbee, OpenThread, and Bluetooth Concurrently on a Linux Host with a Multiprotocol Co-processor* for more information on running the multiprotocol RCP with different host applications.","id":"com.silabs.sdk.stack.super:4.4.6._1150219681_Multiprotocol (OpenThread+Zigbee+BLE) - RCP (UART)_asset:..com.silabs.sdk.stack.super_4.4.6.protocol.openthread.demos.rcp-uart-802154-blehci.rcp-uart-802154-blehci-brd4166a.s37","text":"Multiprotocol (OpenThread+Zigbee+BLE) - RCP (UART)","priority":0,"category":"DEMOS","toolTipText":"This multiprotocol radio co-processor (RCP) application supports running OpenThread, Zigbee, and Bluetooth stacks simultaneously on a host processor. It uses concurrent multiprotocol (CMP) / multi-PAN functionality to run the 802.15.4 networks simultaneously on the same channel, and dynamic multiprotocol (DMP) to run the Bluetooth Link Layer simultaneously. The host stacks and the RCP communicate using the Co-Processor Communication protocol (CPC), which acts as a protocol multiplexer and serial transport layer. The host applications connect to the CPC daemon, which in turn connects to the EFR via a UART link. Refer to *AN1333: Running Zigbee, OpenThread, and Bluetooth Concurrently on a Linux Host with a Multiprotocol Co-processor* for more information on running the multiprotocol RCP with different host applications.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/protocol/openthread/sample-apps/ot-ncp/README-MP-DMP-RCP.md"],"description":"This multiprotocol radio co-processor (RCP) application supports running OpenThread, Zigbee, and Bluetooth stacks simultaneously on a host processor. It uses concurrent multiprotocol (CMP) / multi-PAN functionality to run the 802.15.4 networks simultaneously on the same channel, and dynamic multiprotocol (DMP) to run the Bluetooth Link Layer simultaneously. The host stacks and the RCP communicate using the Co-Processor Communication protocol (CPC), which acts as a protocol multiplexer and serial transport layer. The host applications connect to the CPC daemon, which in turn connects to the EFR via a UART link. Refer to *AN1333: Running Zigbee, OpenThread, and Bluetooth Concurrently on a Linux Host with a Multiprotocol Co-processor* for more information on running the multiprotocol RCP with different host applications.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.rcp-uart-802154-blehci.sample-apps/ot-ncp/rcp-uart-802154-blehci.slcp","text":"Multiprotocol (OpenThread+Zigbee+BLE) - RCP (UART)","priority":9999999,"category":"SOFTWARE","toolTipText":"This multiprotocol radio co-processor (RCP) application supports running OpenThread, Zigbee, and Bluetooth stacks simultaneously on a host processor. It uses concurrent multiprotocol (CMP) / multi-PAN functionality to run the 802.15.4 networks simultaneously on the same channel, and dynamic multiprotocol (DMP) to run the Bluetooth Link Layer simultaneously. The host stacks and the RCP communicate using the Co-Processor Communication protocol (CPC), which acts as a protocol multiplexer and serial transport layer. The host applications connect to the CPC daemon, which in turn connects to the EFR via a UART link. Refer to *AN1333: Running Zigbee, OpenThread, and Bluetooth Concurrently on a Linux Host with a Multiprotocol Co-processor* for more information on running the multiprotocol RCP with different host applications.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/protocol/openthread/sample-apps/ot-ncp/README-OT-NCP.md"],"description":"This is a simple OpenThread Full Thread Device NCP application. This is equivalent to the ot-ncp-ftd application in the OpenThread GitHub repo.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.ot-ncp-ftd.sample-apps/ot-ncp/ot-ncp-ftd.slcp","text":"OpenThread - NCP (FTD)","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a simple OpenThread Full Thread Device NCP application. This is equivalent to the ot-ncp-ftd application in the OpenThread GitHub repo.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/protocol/openthread/sample-apps/ot-ncp/README-OT-NCP.md"],"description":"This is a simple OpenThread Minimal Thread Device NCP application. This is equivalent to the ot-ncp-mtd application in the OpenThread GitHub repo.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.ot-ncp-mtd.sample-apps/ot-ncp/ot-ncp-mtd.slcp","text":"OpenThread - NCP (MTD)","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a simple OpenThread Minimal Thread Device NCP application. This is equivalent to the ot-ncp-mtd application in the OpenThread GitHub repo.\n"},{"imageURL":"bundleentry://52.fwk918423056/icons/run.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/protocol/openthread/sample-apps/ot-ncp/README-OT-RCP.md"],"description":"This is a simple OpenThread RCP application. This is equivalent to the ot-rcp application in the OpenThread GitHub repo.","id":"com.silabs.sdk.stack.super:4.4.6._1150219681_OpenThread - RCP_asset:..com.silabs.sdk.stack.super_4.4.6.protocol.openthread.demos.ot-rcp.ot-rcp-brd4166a.s37","text":"OpenThread - RCP","priority":0,"category":"DEMOS","toolTipText":"This is a simple OpenThread RCP application. This is equivalent to the ot-rcp application in the OpenThread GitHub repo.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/protocol/openthread/sample-apps/ot-ncp/README-OT-RCP.md"],"description":"This is a simple OpenThread RCP application. This is equivalent to the ot-rcp application in the OpenThread GitHub repo.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.ot-rcp.sample-apps/ot-ncp/ot-rcp.slcp","text":"OpenThread - RCP","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a simple OpenThread RCP application. This is equivalent to the ot-rcp application in the OpenThread GitHub repo.\n"},{"imageURL":"bundleentry://52.fwk918423056/icons/run.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/protocol/openthread/sample-apps/ot-cli/README.md"],"description":"This is a very simple CLI application to test the OpenThread stack on a Full Thread Device. This is equivalent to the ot-cli-ftd application in the OpenThread GitHub repo.","id":"com.silabs.sdk.stack.super:4.4.6._1150219681_OpenThread - SoC CLI (FTD)_asset:..com.silabs.sdk.stack.super_4.4.6.protocol.openthread.demos.ot-cli-ftd.ot-cli-ftd-brd4166a.s37","text":"OpenThread - SoC CLI (FTD)","priority":0,"category":"DEMOS","toolTipText":"This is a very simple CLI application to test the OpenThread stack on a Full Thread Device. This is equivalent to the ot-cli-ftd application in the OpenThread GitHub repo.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/protocol/openthread/sample-apps/ot-cli/README.md"],"description":"This is a very simple CLI application to test the OpenThread stack on a Full Thread Device. This is equivalent to the ot-cli-ftd application in the OpenThread GitHub repo.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.ot-cli-ftd.sample-apps/ot-cli/ot-cli-ftd.slcp","text":"OpenThread - SoC CLI (FTD)","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a very simple CLI application to test the OpenThread stack on a Full Thread Device. This is equivalent to the ot-cli-ftd application in the OpenThread GitHub repo.\n"},{"imageURL":"bundleentry://52.fwk918423056/icons/run.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/protocol/openthread/sample-apps/ot-cli/README.md"],"description":"This is a very simple CLI application to test the OpenThread stack on a Minimal Thread Device. This is equivalent to the ot-cli-mtd application in the OpenThread GitHub repo.","id":"com.silabs.sdk.stack.super:4.4.6._1150219681_OpenThread - SoC CLI (MTD)_asset:..com.silabs.sdk.stack.super_4.4.6.protocol.openthread.demos.ot-cli-mtd.ot-cli-mtd-brd4166a.s37","text":"OpenThread - SoC CLI (MTD)","priority":0,"category":"DEMOS","toolTipText":"This is a very simple CLI application to test the OpenThread stack on a Minimal Thread Device. This is equivalent to the ot-cli-mtd application in the OpenThread GitHub repo.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/protocol/openthread/sample-apps/ot-cli/README.md"],"description":"This is a very simple CLI application to test the OpenThread stack on a Minimal Thread Device. This is equivalent to the ot-cli-mtd application in the OpenThread GitHub repo.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.ot-cli-mtd.sample-apps/ot-cli/ot-cli-mtd.slcp","text":"OpenThread - SoC CLI (MTD)","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a very simple CLI application to test the OpenThread stack on a Minimal Thread Device. This is equivalent to the ot-cli-mtd application in the OpenThread GitHub repo.\n"},{"imageURL":"bundleentry://52.fwk918423056/icons/run.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/protocol/openthread/sample-apps/sleepy-demo/README.md"],"description":"This is a sample application to start and form a Thread network on an FTD for the sleepy-demo.","id":"com.silabs.sdk.stack.super:4.4.6._1150219681_OpenThread - SoC Sleepy Demo (FTD)_asset:..com.silabs.sdk.stack.super_4.4.6.protocol.openthread.demos.sleepy-demo-ftd.sleepy-demo-ftd-brd4166a.s37","text":"OpenThread - SoC Sleepy Demo (FTD)","priority":0,"category":"DEMOS","toolTipText":"This is a sample application to start and form a Thread network on an FTD for the sleepy-demo.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/protocol/openthread/sample-apps/sleepy-demo/README.md"],"description":"This is a sample application to start and form a Thread network on an FTD for the sleepy-demo.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.sleepy-demo-ftd.sample-apps/sleepy-demo/sleepy-demo-ftd.slcp","text":"OpenThread - SoC Sleepy Demo (FTD)","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a sample application to start and form a Thread network on an FTD for the sleepy-demo.\n"},{"imageURL":"bundleentry://52.fwk918423056/icons/run.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/protocol/openthread/sample-apps/sleepy-demo/README.md"],"description":"This is a sample application to demonstrate Sleepy End Device (SED) behaviour with polling, using the EFR32's low power EM2 mode.","id":"com.silabs.sdk.stack.super:4.4.6._1150219681_OpenThread - SoC Sleepy Demo (MTD)_asset:..com.silabs.sdk.stack.super_4.4.6.protocol.openthread.demos.sleepy-demo-mtd.sleepy-demo-mtd-brd4166a.s37","text":"OpenThread - SoC Sleepy Demo (MTD)","priority":0,"category":"DEMOS","toolTipText":"This is a sample application to demonstrate Sleepy End Device (SED) behaviour with polling, using the EFR32's low power EM2 mode.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/protocol/openthread/sample-apps/sleepy-demo/README.md"],"description":"This is a sample application to demonstrate Sleepy End Device (SED) behaviour with polling, using the EFR32's low power EM2 mode.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.sleepy-demo-mtd.sample-apps/sleepy-demo/sleepy-demo-mtd.slcp","text":"OpenThread - SoC Sleepy Demo (MTD)","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a sample application to demonstrate Sleepy End Device (SED) behaviour with polling, using the EFR32's low power EM2 mode.\n"},{"imageURL":"bundleentry://52.fwk918423056/icons/run.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/protocol/openthread/sample-apps/sleepy-demo/README.md"],"description":"This is a sample application to demonstrate Synchronous Sleepy End Device (SSED) behaviour with CSL, using the EFR32's low power EM2 mode.","id":"com.silabs.sdk.stack.super:4.4.6._1150219681_OpenThread - SoC Sleepy Demo (SSED)_asset:..com.silabs.sdk.stack.super_4.4.6.protocol.openthread.demos.sleepy-demo-ssed.sleepy-demo-ssed-brd4166a.s37","text":"OpenThread - SoC Sleepy Demo (SSED)","priority":0,"category":"DEMOS","toolTipText":"This is a sample application to demonstrate Synchronous Sleepy End Device (SSED) behaviour with CSL, using the EFR32's low power EM2 mode.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/protocol/openthread/sample-apps/sleepy-demo/README.md"],"description":"This is a sample application to demonstrate Synchronous Sleepy End Device (SSED) behaviour with CSL, using the EFR32's low power EM2 mode.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.sleepy-demo-ssed.sample-apps/sleepy-demo/sleepy-demo-ssed.slcp","text":"OpenThread - SoC Sleepy Demo (SSED)","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a sample application to demonstrate Synchronous Sleepy End Device (SSED) behaviour with CSL, using the EFR32's low power EM2 mode.\n"},{"imageURL":"bundleentry://52.fwk918423056/icons/run.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/protocol/openthread/sample-apps/ot-ble-dmp/README.md"],"description":"This is a simple application to test DMP (Dynamic MultiProtocol) with OpenThread and Bluetooth running on FreeRTOS. It is identical to the ot-ble-dmp application with the exception that support for buttons has been removed. This application is meant to be used for boards which don't have buttons.","id":"com.silabs.sdk.stack.super:4.4.6._1150219681_OpenThread BLE DMP (No buttons) - SoC FreeRTOS_asset:..com.silabs.sdk.stack.super_4.4.6.protocol.openthread.demos.ot-ble-dmp-no-buttons.ot-ble-dmp-no-buttons-brd4166a.s37","text":"OpenThread BLE DMP (No buttons) - SoC FreeRTOS","priority":0,"category":"DEMOS","toolTipText":"This is a simple application to test DMP (Dynamic MultiProtocol) with OpenThread and Bluetooth running on FreeRTOS.\nIt is identical to the ot-ble-dmp application with the exception that support for buttons has been removed. This application is meant to be used for boards which don't have buttons.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/protocol/openthread/sample-apps/ot-ble-dmp/README.md"],"description":"This is a simple application to test DMP (Dynamic MultiProtocol) with OpenThread and Bluetooth running on FreeRTOS. It is identical to the ot-ble-dmp application with the exception that support for buttons has been removed. This application is meant to be used for boards which don't have buttons.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.ot-ble-dmp-no-buttons.sample-apps/ot-ble-dmp/ot-ble-dmp-no-buttons.slcp","text":"OpenThread BLE DMP (No buttons) - SoC FreeRTOS","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a simple application to test DMP (Dynamic MultiProtocol) with OpenThread and Bluetooth running on FreeRTOS.\nIt is identical to the ot-ble-dmp application with the exception that support for buttons has been removed. This application is meant to be used for boards which don't have buttons.\n"},{"imageURL":"bundleentry://52.fwk918423056/icons/run.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/protocol/openthread/sample-apps/ot-ble-dmp/README.md"],"description":"This is a simple application to test DMP (Dynamic MultiProtocol) with OpenThread and Bluetooth running on FreeRTOS.","id":"com.silabs.sdk.stack.super:4.4.6._1150219681_OpenThread BLE DMP - SoC FreeRTOS_asset:..com.silabs.sdk.stack.super_4.4.6.protocol.openthread.demos.ot-ble-dmp.ot-ble-dmp-brd4166a.s37","text":"OpenThread BLE DMP - SoC FreeRTOS","priority":0,"category":"DEMOS","toolTipText":"This is a simple application to test DMP (Dynamic MultiProtocol) with OpenThread and Bluetooth running on FreeRTOS.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/protocol/openthread/sample-apps/ot-ble-dmp/README.md"],"description":"This is a simple application to test DMP (Dynamic MultiProtocol) with OpenThread and Bluetooth running on FreeRTOS.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.ot-ble-dmp.sample-apps/ot-ble-dmp/ot-ble-dmp.slcp","text":"OpenThread BLE DMP - SoC FreeRTOS","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a simple application to test DMP (Dynamic MultiProtocol) with OpenThread and Bluetooth running on FreeRTOS.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/common/example/blink_baremetal/readme.md"],"description":"This example project shows how to blink an LED in a bare-metal configuration.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.blink_baremetal.example/blink_baremetal/blink_baremetal.slcp","text":"Platform - Blink Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project shows how to blink an LED in a bare-metal configuration.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/common/example/blink_kernel_freertos/readme.md"],"description":"This example project shows how to blink an LED using a FreeRTOS kernel task. The blink task can be created using either dynamic or static memory allocation for the task stack and tcb.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.blink_kernel_freertos.example/blink_kernel_freertos/blink_kernel_freertos.slcp","text":"Platform - Blink Kernel FreeRTOS","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project shows how to blink an LED using a FreeRTOS kernel task. The blink task can be created using either dynamic or static memory allocation for the task stack and tcb.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/common/example/blink_kernel_micriumos/readme.md"],"description":"This example project shows how to blink an LED using a Micrium OS kernel task.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.blink_kernel_micriumos.example/blink_kernel_micriumos/blink_kernel_micriumos.slcp","text":"Platform - Blink Kernel Micrium OS","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project shows how to blink an LED using a Micrium OS kernel task.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/common/example/blink_pwm_baremetal/readme.md"],"description":"This example project uses the PWM driver that uses a TIMER to gradually adjust the intensity of an LED up and down.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.blink_pwm_baremetal.example/blink_pwm_baremetal/blink_pwm_baremetal.slcp","text":"Platform - Blink PWM","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project uses the PWM driver that uses a TIMER to gradually adjust the intensity of an LED up and down.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/common/example/cli_baremetal/readme.md"],"description":"This example project demonstrates how to use the CLI driver in a bare-metal configuration.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.cli_baremetal.example/cli_baremetal/cli_baremetal.slcp","text":"Platform - CLI Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates how to use the CLI driver in a bare-metal configuration.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/common/example/cli_kernel_freertos/readme.md"],"description":"This example project demonstrates how to use the CLI driver using a FreeRTOS Kernel.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.cli_kernel_freertos.example/cli_kernel_freertos/cli_kernel_freertos.slcp","text":"Platform - CLI Kernel FreeRTOS","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates how to use the CLI driver using a FreeRTOS Kernel.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/common/example/cli_kernel_micriumos/readme.md"],"description":"This example project demonstrates how to use the CLI driver using a Micrium OS Kernel.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.cli_kernel_micriumos.example/cli_kernel_micriumos/cli_kernel_micriumos.slcp","text":"Platform - CLI Kernel Micrium OS","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates how to use the CLI driver using a Micrium OS Kernel.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/common/example/cpc_secondary_spi_security_device_recovery/readme.md"],"description":"This simple example project implements the function sl_cpc_security_on_unbind_request(), allowing the secondary device to be unbound from the host.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.cpc_secondary_spi_security_device_recovery.example/cpc_secondary_spi_security_device_recovery/cpc_secondary_spi_security_device_recovery.slcp","text":"Platform - CPC Secondary Device Recovery - SPI","priority":9999999,"category":"SOFTWARE","toolTipText":"This simple example project implements the function sl_cpc_security_on_unbind_request(), allowing the secondary device to be unbound from the host.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/common/example/cpc_secondary_vcom_security_device_recovery/readme.md"],"description":"This simple example project implements the function sl_cpc_security_on_unbind_request(), allowing the secondary device to be unbound from the host.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.cpc_secondary_vcom_security_device_recovery.example/cpc_secondary_vcom_security_device_recovery/cpc_secondary_vcom_security_device_recovery.slcp","text":"Platform - CPC Secondary Device Recovery - VCOM","priority":9999999,"category":"SOFTWARE","toolTipText":"This simple example project implements the function sl_cpc_security_on_unbind_request(), allowing the secondary device to be unbound from the host.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/common/example/cpc_secondary_vcom_micriumos/readme.md"],"description":"This simple example project shows how to open user endpoints in a Micrium OS task with security disabled. By connecting a host running a CPCd instance to the secondary's VCOM port, the user can send data to the user endpoints, and verify that it is echoed back.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.cpc_secondary_vcom_micriumos.example/cpc_secondary_vcom_micriumos/cpc_secondary_vcom_micriumos.slcp","text":"Platform - CPC Secondary with Micrium OS","priority":9999999,"category":"SOFTWARE","toolTipText":"This simple example project shows how to open user endpoints in a Micrium OS task with security disabled. By connecting a host running a CPCd instance to the secondary's VCOM port, the user can send data to the user endpoints, and verify that it is echoed back.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/common/example/cpc_secondary_vcom_security_micriumos/readme.md"],"description":"This simple example project shows how to open user endpoints in a Micrium OS task with security enabled. By connecting a host running a CPCd instance to the secondary's VCOM port, the user can send data to the user endpoints, and verify that it is echoed back.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.cpc_secondary_vcom_security_micriumos.example/cpc_secondary_vcom_security_micriumos/cpc_secondary_vcom_security_micriumos.slcp","text":"Platform - CPC Secondary with Micrium OS and Security Enabled","priority":9999999,"category":"SOFTWARE","toolTipText":"This simple example project shows how to open user endpoints in a Micrium OS task with security enabled. By connecting a host running a CPCd instance to the secondary's VCOM port, the user can send data to the user endpoints, and verify that it is echoed back.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/common/example/dmadrv_baremetal/readme.md"],"description":"This example project shows how to use DMADRV driver to transfer data between memory and a USART peripheral in a bare-metal configuration.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.dmadrv_baremetal.example/dmadrv_baremetal/dmadrv_baremetal.slcp","text":"Platform - DMADRV Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project shows how to use DMADRV driver to transfer data between memory and a USART peripheral in a bare-metal configuration.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/common/example/iostream_usart_baremetal/readme.md"],"description":"This example project uses the I/O Stream service running in a bare-metal configuration  to demonstrate the use of UART communication over the virtual COM port (VCOM). The  application will echo back any characters it receives over the serial connection. The  VCOM serial port can be used either over USB or by connecting to port 4902 if the kit  is connected via Ethernet.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.iostream_usart_baremetal.example/iostream_usart_baremetal/iostream_usart_baremetal.slcp","text":"Platform - I/O Stream USART Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project uses the I/O Stream service running in a bare-metal configuration  to demonstrate the use of UART communication over the virtual COM port (VCOM). The  application will echo back any characters it receives over the serial connection. The  VCOM serial port can be used either over USB or by connecting to port 4902 if the kit  is connected via Ethernet. \n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/common/example/iostream_usart_kernel_micriumos/readme.md"],"description":"This example project uses the I/O Stream service running in a Micrium OS kernel task to demonstrate the use of UART communication over the virtual COM port (VCOM). The application will echo back any characters it receives over the serial connection. The VCOM serial port can be used either over USB or by connecting to port 4902 if the kit is connected via Ethernet.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.iostream_usart_kernel_micriumos.example/iostream_usart_kernel_micriumos/iostream_usart_kernel_micriumos.slcp","text":"Platform - I/O Stream USART on Micrium OS kernel","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project uses the I/O Stream service running in a Micrium OS kernel task to demonstrate the use of UART communication over the virtual COM port (VCOM). The application will echo back any characters it receives over the serial connection. The VCOM serial port can be used either over USB or by connecting to port 4902 if the kit is connected via Ethernet. \n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/common/example/i2cspm_baremetal/readme.md"],"description":"This example project demonstrates how to use the I2C Simple Polled Master driver using the Si7021 Relative Humidity and Temperature Sensor in a bare-metal configuration.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.i2cspm_baremetal.example/i2cspm_baremetal/i2cspm_baremetal.slcp","text":"Platform - I2C Simple Polled Master Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates how to use the I2C Simple Polled Master driver using the Si7021 Relative Humidity and Temperature Sensor in a bare-metal configuration.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/common/example/i2cspm_kernel_freertos/readme.md"],"description":"This example project demonstrates how to use the I2C Simple Polled Master driver using the Si7021 Relative Humidity and Temperature Sensor in a FreeRTOS kernel task.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.i2cspm_kernel_freertos.example/i2cspm_kernel_freertos/i2cspm_kernel_freertos.slcp","text":"Platform - I2C Simple Polled Master on FreeRTOS Kernel","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates how to use the I2C Simple Polled Master driver using the Si7021 Relative Humidity and Temperature Sensor in a FreeRTOS kernel task.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/common/example/i2cspm_kernel_micriumos/readme.md"],"description":"This example project demonstrates how to use the I2C Simple Polled Master driver using the Si7021 Relative Humidity and Temperature Sensor in a Micrium OS kernel task.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.i2cspm_kernel_micriumos.example/i2cspm_kernel_micriumos/i2cspm_kernel_micriumos.slcp","text":"Platform - I2C Simple Polled Master on Micrium OS Kernel","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates how to use the I2C Simple Polled Master driver using the Si7021 Relative Humidity and Temperature Sensor in a Micrium OS kernel task.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/common/example/mpu_simple_baremetal/readme.md"],"description":"This example project demonstrates the use of the Simple MPU module. Its purpose is to block the execution of code from RAM in order to prevent code injection attacks. In this example,  some fake malicious executable code is copied to RAM and executed with the MPU disabled and  re-enabled to demonstrate its effectiveness.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.mpu_simple_baremetal.example/mpu_simple_baremetal/mpu_simple_baremetal.slcp","text":"Platform - MPU Simple","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the use of the Simple MPU module. Its purpose is to block the execution of code from RAM in order to prevent code injection attacks. In this example,  some fake malicious executable code is copied to RAM and executed with the MPU disabled and  re-enabled to demonstrate its effectiveness. \n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/common/example/nvm3_baremetal/readme.md"],"description":"This example project demonstrates use of the NVM3 interface. Using the command line interface, the user can write, read and delete NVM3 data objects through the serial connection. The number of writes and deletes are tracked in counter objects.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.nvm3_baremetal.example/nvm3_baremetal/nvm3_baremetal.slcp","text":"Platform - NVM3 Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates use of the NVM3 interface. Using the command line interface, the user can write, read and delete NVM3 data objects through the serial connection. The number of writes and deletes are tracked in counter objects.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/common/example/power_manager_baremetal/readme.md"],"description":"This example project demonstrates use of the Power Manager module in a bare metal application.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.power_manager_baremetal.example/power_manager_baremetal/power_manager_baremetal.slcp","text":"Platform - Power Manager Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates use of the Power Manager module in a bare metal application.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/common/example/power_manager_kernel_micriumos/readme.md"],"description":"This example project demonstrates use of the Power Manager module in a Micrium OS kernel task.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.power_manager_kernel_micriumos.example/power_manager_kernel_micriumos/power_manager_kernel_micriumos.slcp","text":"Platform - Power Manager Kernel with Micrium OS","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates use of the Power Manager module in a Micrium OS kernel task.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/common/example/spidrv_master_baremetal/readme.md"],"description":"This example project demonstrates how to use the master mode of the Serial Peripheral Interface driver in a bare-metal configuration.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.spidrv_master_baremetal.example/spidrv_master_baremetal/spidrv_master_baremetal.slcp","text":"Platform - SPIDRV Master Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates how to use the master mode of the Serial Peripheral Interface driver in a bare-metal configuration.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/common/example/spidrv_master_kernel_micriumos/readme.md"],"description":"This example project demonstrates how to use the master mode of the Serial Peripheral Interface driver in a Micrium OS kernel task.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.spidrv_master_kernel_micriumos.example/spidrv_master_kernel_micriumos/spidrv_master_kernel_micriumos.slcp","text":"Platform - SPIDRV Master on Micrium OS kernel","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates how to use the master mode of the Serial Peripheral Interface driver in a Micrium OS kernel task.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/common/example/spidrv_slave_baremetal/readme.md"],"description":"This example project demonstrates how to use the slave mode of the Serial Peripheral Interface driver in a bare-metal configuration.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.spidrv_slave_baremetal.example/spidrv_slave_baremetal/spidrv_slave_baremetal.slcp","text":"Platform - SPIDRV Slave Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates how to use the slave mode of the Serial Peripheral Interface driver in a bare-metal configuration.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/common/example/spidrv_slave_kernel_micriumos/readme.md"],"description":"This example project demonstrates how to use the slave mode of the Serial Peripheral Interface driver in a Micrium OS kernel task.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.spidrv_slave_kernel_micriumos.example/spidrv_slave_kernel_micriumos/spidrv_slave_kernel_micriumos.slcp","text":"Platform - SPIDRV Slave on Micrium OS kernel","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates how to use the slave mode of the Serial Peripheral Interface driver in a Micrium OS kernel task.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/common/example/simple_button_baremetal/readme.md"],"description":"This example project shows how to toggle LEDs using buttons in a bare-metal environment.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.simple_button_baremetal.example/simple_button_baremetal/simple_button_baremetal.slcp","text":"Platform - Simple Button Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project shows how to toggle LEDs using buttons in a bare-metal environment.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/common/example/simple_button_kernel_micriumos/readme.md"],"description":"This example project shows how to toggle LEDs using buttons in a Micrium OS kernel task.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.simple_button_kernel_micriumos.example/simple_button_kernel_micriumos/simple_button_kernel_micriumos.slcp","text":"Platform - Simple Button on Micrium OS kernel","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project shows how to toggle LEDs using buttons in a Micrium OS kernel task.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/common/example/sleeptimer_baremetal/readme.md"],"description":"This example project demonstrates periodic and one-shot timers using the low-frequency real-time clock peripheral. Timers can be stopped and restarted using the buttons. Timer status is reported on the virtual COM serial port.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.sleeptimer_baremetal.example/sleeptimer_baremetal/sleeptimer_baremetal.slcp","text":"Platform - Sleeptimer Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates periodic and one-shot timers using the low-frequency real-time clock peripheral. Timers can be stopped and restarted using the buttons. Timer status is reported on the virtual COM serial port.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/common/example/sleeptimer_wallclock_baremetal/readme.md"],"description":"This example project demonstrates the wallclock interface of the sleeptimer service. The user can get and set the date and time in different formats through the VCOM serial port.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.sleeptimer_wallclock_baremetal.example/sleeptimer_wallclock_baremetal/sleeptimer_wallclock_baremetal.slcp","text":"Platform - Sleeptimer Wallclock","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the wallclock interface of the sleeptimer service. The user can get and set the date and time in different formats through the VCOM serial port.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/common/example/tempdrv_kernel_micriumos/readme.md"],"description":"This example project demonstrates how to use the internal temperature sensor in a Micrium OS kernel task.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.tempdrv_kernel_micriumos.example/tempdrv_kernel_micriumos/tempdrv_kernel_micriumos.slcp","text":"Platform - TEMPDRV on Micrium OS kernel","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates how to use the internal temperature sensor in a Micrium OS kernel task.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/common/example/uartdrv_baremetal/readme.md"],"description":"This example project uses the UARTDRV driver running in a bare-metal configuration  to demonstrate the use of LEUART communication over the virtual COM port (VCOM). The  application will echo back any characters it receives over the serial connection.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.uartdrv_baremetal.example/uartdrv_baremetal/uartdrv_baremetal.slcp","text":"Platform - UARTDRV LEUART Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project uses the UARTDRV driver running in a bare-metal configuration  to demonstrate the use of LEUART communication over the virtual COM port (VCOM). The  application will echo back any characters it receives over the serial connection.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/common/example/uartdrv_kernel_micriumos/readme.md"],"description":"This example project uses the UARTDRV driver running in a Micrium OS task to demonstrate the use of LEUART communication over the virtual COM port (VCOM). The  application will echo back any characters it receives over the serial connection.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.uartdrv_kernel_micriumos.example/uartdrv_kernel_micriumos/uartdrv_kernel_micriumos.slcp","text":"Platform - UARTDRV LEUART on Micrium OS kernel","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project uses the UARTDRV driver running in a Micrium OS task to demonstrate the use of LEUART communication over the virtual COM port (VCOM). The  application will echo back any characters it receives over the serial connection.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/common/example/psa_crypto_aead/readme.md"],"description":"This example uses the PSA Crypto API to perform Authenticated Encryption with Associated Data (AEAD) operations on the supported device.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.psa_crypto_aead.example/psa_crypto_aead/psa_crypto_aead.slcp","text":"Platform Security - SoC PSA Crypto AEAD","priority":9999999,"category":"SOFTWARE","toolTipText":"This example uses the PSA Crypto API to perform Authenticated Encryption with Associated Data (AEAD) operations on the supported device.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/common/example/psa_crypto_asymmetric_key/readme.md"],"description":"This example uses the PSA Crypto API to perform asymmetric key operations on the supported device.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.psa_crypto_asymmetric_key.example/psa_crypto_asymmetric_key/psa_crypto_asymmetric_key.slcp","text":"Platform Security - SoC PSA Crypto Asymmetric Key","priority":9999999,"category":"SOFTWARE","toolTipText":"This example uses the PSA Crypto API to perform asymmetric key operations on the supported device.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/common/example/psa_crypto_cipher/readme.md"],"description":"This example project demonstrates the unauthenticated cipher API for generic and built-in AES-128 keys.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.psa_crypto_cipher.example/psa_crypto_cipher/psa_crypto_cipher.slcp","text":"Platform Security - SoC PSA Crypto Cipher","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the unauthenticated cipher API for generic and built-in AES-128 keys.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/common/example/psa_crypto_dsa/readme.md"],"description":"This example project demonstrates the ECDSA and EdDSA digital signature API for generic and built-in ECC keys.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.psa_crypto_dsa.example/psa_crypto_dsa/psa_crypto_dsa.slcp","text":"Platform Security - SoC PSA Crypto DSA","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the ECDSA and EdDSA digital signature API for generic and built-in ECC keys.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/common/example/psa_crypto_ecdh/readme.md"],"description":"This example project demonstrates the ECDH key agreement API.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.psa_crypto_ecdh.example/psa_crypto_ecdh/psa_crypto_ecdh.slcp","text":"Platform Security - SoC PSA Crypto ECDH","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the ECDH key agreement API.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/common/example/psa_crypto_hash/readme.md"],"description":"This example project demonstrates the hash API.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.psa_crypto_hash.example/psa_crypto_hash/psa_crypto_hash.slcp","text":"Platform Security - SoC PSA Crypto Hash","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the hash API.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/common/example/psa_crypto_kdf/readme.md"],"description":"This example project demonstrates the Key Derivation Function (KDF) API.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.psa_crypto_kdf.example/psa_crypto_kdf/psa_crypto_kdf.slcp","text":"Platform Security - SoC PSA Crypto KDF","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the Key Derivation Function (KDF) API.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/common/example/psa_crypto_mac/readme.md"],"description":"This example project demonstrates the Message Authentication Code (MAC) API.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.psa_crypto_mac.example/psa_crypto_mac/psa_crypto_mac.slcp","text":"Platform Security - SoC PSA Crypto MAC","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the Message Authentication Code (MAC) API.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/common/example/psa_crypto_symmetric_key/readme.md"],"description":"This example project demonstrates the symmetric key API.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.psa_crypto_symmetric_key.example/psa_crypto_symmetric_key/psa_crypto_symmetric_key.slcp","text":"Platform Security - SoC PSA Crypto Symmetric Key","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the symmetric key API.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/common/example/psa_crypto_x509/readme.md"],"description":"This example project uses opaque ECDSA keys to implement the X.509 standard for certificates in Mbed TLS.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.psa_crypto_x509.example/psa_crypto_x509/psa_crypto_x509.slcp","text":"Platform Security - SoC PSA Crypto X.509","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project uses opaque ECDSA keys to implement the X.509 standard for certificates in Mbed TLS.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/common/example/mbedtls_aescrypt/readme.md"],"description":"This example uses hardware accelerators to accelerate the AES encryption and SHA hash functions of mbedTLS.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.mbedtls_aescrypt.example/mbedtls_aescrypt/mbedtls_aescrypt.slcp","text":"Platform Security - SoC mbedTLS AES","priority":9999999,"category":"SOFTWARE","toolTipText":"This example uses hardware accelerators to accelerate the AES encryption and SHA hash functions of mbedTLS.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/common/example/mbedtls_ecdh/readme.md"],"description":"This example uses hardware accelerators of the supported devices to perform ECDH key generation with mbedTLS.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.mbedtls_ecdh.example/mbedtls_ecdh/mbedtls_ecdh.slcp","text":"Platform Security - SoC mbedTLS ECDH","priority":9999999,"category":"SOFTWARE","toolTipText":"This example uses hardware accelerators of the supported devices to perform ECDH key generation with mbedTLS.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/common/example/mbedtls_ecdsa/readme.md"],"description":"This example uses hardware accelerators on the supported device to perform ECDSA digital signature with mbedTLS.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.mbedtls_ecdsa.example/mbedtls_ecdsa/mbedtls_ecdsa.slcp","text":"Platform Security - SoC mbedTLS ECDSA","priority":9999999,"category":"SOFTWARE","toolTipText":"This example uses hardware accelerators on the supported device to perform ECDSA digital signature with mbedTLS.\n"},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/flex/documentation/example/rail/rail_soc_simple_trx_ncp/readme_spi.md"],"description":"This application demonstrates the simplest exchange of transmit and receive operation between two nodes. Both nodes are capable of sending and receiving messages. On the WSTK, any button press (PB0/PB1) will send a message. LED1 will toggle on message send and LED0 will toggle on message receive. CPC can also be used for sending and showing received messages. To send put '1' or '0x01' into the CPC channel. By default the received packets will be sent to CPC channel, to enable or disable print send '0' or '0x00' in CPC channel. NOTE: Due to the higher current consumption of the continuous radio usage (especially in Rx Mode), it is not recommended to power the boards from a coin cell. Instead, a USB power bank can be used if portability is needed.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.rail_soc_simple_trx_ncp_spi.example/rail/rail_soc_simple_trx_ncp/rail_soc_simple_trx_ncp_spi.slcp","text":"RAIL - NCP Simple TRX with CPC Support (SPI)","priority":9999999,"category":"SOFTWARE","toolTipText":"This application demonstrates the simplest exchange of transmit and receive operation between two nodes. Both nodes are capable of sending and receiving messages. On the WSTK, any button press (PB0/PB1) will send a message. LED1 will toggle on message send and LED0 will toggle on message receive. CPC can also be used for sending and showing received messages. To send put '1' or '0x01' into the CPC channel. By default the received packets will be sent to CPC channel, to enable or disable print send '0' or '0x00' in CPC channel. NOTE: Due to the higher current consumption of the continuous radio usage (especially in Rx Mode), it is not recommended to power the boards from a coin cell. Instead, a USB power bank can be used if portability is needed."},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/flex/documentation/example/rail/rail_soc_simple_trx_ncp/readme_vcom.md"],"description":"This application demonstrates the simplest exchange of transmit and receive operation between two nodes. Both nodes are capable of sending and receiving messages. On the WSTK, any button press (PB0/PB1) will send a message. LED1 will toggle on message send and LED0 will toggle on message receive. CPC can also be used for sending and showing received messages. To send put '1' or '0x01' into the CPC channel. By default the received packets will be sent to CPC channel, to enable or disable print send '0' or '0x00' in CPC channel. NOTE: Due to the higher current consumption of the continuous radio usage (especially in Rx Mode), it is not recommended to power the boards from a coin cell. Instead, a USB power bank can be used if portability is needed.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.rail_soc_simple_trx_ncp.example/rail/rail_soc_simple_trx_ncp/rail_soc_simple_trx_ncp.slcp","text":"RAIL - NCP Simple TRX with CPC Support (VCOM)","priority":9999999,"category":"SOFTWARE","toolTipText":"This application demonstrates the simplest exchange of transmit and receive operation between two nodes. Both nodes are capable of sending and receiving messages. On the WSTK, any button press (PB0/PB1) will send a message. LED1 will toggle on message send and LED0 will toggle on message receive. CPC can also be used for sending and showing received messages. To send put '1' or '0x01' into the CPC channel. By default the received packets will be sent to CPC channel, to enable or disable print send '0' or '0x00' in CPC channel. NOTE: Due to the higher current consumption of the continuous radio usage (especially in Rx Mode), it is not recommended to power the boards from a coin cell. Instead, a USB power bank can be used if portability is needed."},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/flex/documentation/example/rail/rail_soc_empty/readme.md"],"description":"The RAIL Empty project is a barebone RAIL app that can be a basis of proprietary solutions. This comes prepared with a Single PHY radio configurator and a basic callback function for RAIL. With one click this baremetal sample app can be run on an OS, currently MicriumOS and FreeRTOS is supported.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.rail_soc_empty.example/rail/rail_soc_empty/rail_soc_empty.slcp","text":"RAIL - SoC Empty","priority":9999999,"category":"SOFTWARE","toolTipText":"The RAIL Empty project is a barebone RAIL app that can be a basis of proprietary solutions. This comes prepared with a Single PHY radio configurator and a basic callback function for RAIL. With one click this baremetal sample app can be run on an OS, currently MicriumOS and FreeRTOS is supported."},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/flex/documentation/example/rail/rail_soc_emode/readme.md"],"description":"This is a customizable Energy Mode sample application. To control the sample app use the CLI interface over UART. Through CLI you can change the energy mode during different tasks of the sample app, like idle, sending or receiving. To get started send the 'help' command over CLI. To enter Idle mode with different energy levels send 'idle x' where x stand for a number corresponding for an energy mode (0:empty loop, 1:EM1, 2:EM2, 3:EM3). To test the TX function use 'cw x', this will set the radio into Continuous Wave mode with the selected energy level. 'periodic_tx us x' command also useful to test TX function with packets, it will send packets with us microseconds delays, and return into selected x energy mode after it. To test RX functions use 'rx x' or 'periodic_rx us_delay us_rx x' where x is the energy level, us_delay is the periodic delay between RX in microseconds, and us_rx is the length of the RX on in microseconds. To set or get TX power level use 'set_power d_dbm' or 'get_power' where d_dbm stands for the deci-dBm value to set the power level to. With one click this baremetal sample app can be run on an OS, currently MicriumOS and FreeRTOS is supported. Note: Due to the higher current consumption of the continuous radio usage, it is recommended to power the board over USB instead of coin cell.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.rail_soc_emode.example/rail/rail_soc_emode/rail_soc_emode.slcp","text":"RAIL - SoC Energy Mode","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a customizable Energy Mode sample application. To control the sample app use the CLI interface over UART. Through CLI you can change the energy mode during different tasks of the sample app, like idle, sending or receiving. To get started send the 'help' command over CLI. To enter Idle mode with different energy levels send 'idle x' where x stand for a number corresponding for an energy mode (0:empty loop, 1:EM1, 2:EM2, 3:EM3). To test the TX function use 'cw x', this will set the radio into Continuous Wave mode with the selected energy level. 'periodic_tx us x' command also useful to test TX function with packets, it will send packets with us microseconds delays, and return into selected x energy mode after it. To test RX functions use 'rx x' or 'periodic_rx us_delay us_rx x' where x is the energy level, us_delay is the periodic delay between RX in microseconds, and us_rx is the length of the RX on in microseconds. To set or get TX power level use 'set_power d_dbm' or 'get_power' where d_dbm stands for the deci-dBm value to set the power level to. With one click this baremetal sample app can be run on an OS, currently MicriumOS and FreeRTOS is supported. Note: Due to the higher current consumption of the continuous radio usage, it is recommended to power the board over USB instead of coin cell."},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/flex/documentation/example/rail/rail_soc_railtest/readme.md"],"description":"The RAILtest application provides a simple tool for testing the radio and the functionality of the RAIL library via CLI. For more advanced usage, developers must write software against the RAIL library and create a custom radio configuration.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.rail_soc_railtest.example/rail/rail_soc_railtest/rail_soc_railtest.slcp","text":"RAIL - SoC RAILtest","priority":9999999,"category":"SOFTWARE","toolTipText":"The RAILtest application provides a simple tool for testing the radio and the functionality of the RAIL library via CLI. For more advanced usage, developers must write software against the RAIL library and create a custom radio configuration."},{"imageURL":"bundleentry://52.fwk918423056/icons/run.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/flex/documentation/example/rail/rail_soc_range_test/readme.md"],"description":"This is a customizable Range Test Sample Application that demonstrates over the air range of the EFR32. This sample app can act as a Transmitter and a Receiver. Flashing this app into two separate boards makes it possible to test the features and specification of the radio. The sample also provides an example how the RAIL API can be used. In Tx Mode, the user can send packets. Packet length (7..64 bytes) and the number of packets to transmit (from 500 up to continuous) can be set. Output power can be set in 0.5dBm steps (power setpoint), between -15..+20dBm. Actual minimum and maximum power may vary in different frequencies as well as the power that is actually set by RAIL. The get_power command displays the setpoint first, then actual value. In Rx Mode, the radio listens on the given channel and inspects the packets received. Only packets that are sent with the expected device ID, will be processed. Packet Error Rate, Bit Error Rate and RSSI of the packets is displayed to inform about the quality of the transmission. For both modes, the channel on which the Tx/Rx radio will operate and the device IDs of the transmitters and receiver radio, can be set. Radio related events can be logged on UART on demand. CLI can be used for setting and starting/stoping the application as well, to start with CLI interface send 'help' over terminal. NOTE: Due to the higher current consumption of the continuous radio usage (especially in Rx Mode), it is not recommended to power the boards from a coin cell. Instead, a USB power bank can be used if portability is needed.","id":"com.silabs.sdk.stack.super:4.4.6._1150219681_RAIL - SoC Range Test_asset:..com.silabs.sdk.stack.super_4.4.6.app.flex.demos.rail_soc_range_test_cli.rail_soc_range_test_cli-brd4166a.s37","text":"RAIL - SoC Range Test","priority":0,"category":"DEMOS","toolTipText":"This is a customizable Range Test Sample Application that demonstrates over the air range of the EFR32. This sample app can act as a Transmitter and a Receiver. Flashing this app into two separate boards makes it possible to test the features and specification of the radio. The sample also provides an example how the RAIL API can be used. In Tx Mode, the user can send packets. Packet length (7..64 bytes) and the number of packets to transmit (from 500 up to continuous) can be set. Output power can be set in 0.5dBm steps (power setpoint), between -15..+20dBm. Actual minimum and maximum power may vary in different frequencies as well as the power that is actually set by RAIL. The get_power command displays the setpoint first, then actual value. In Rx Mode, the radio listens on the given channel and inspects the packets received. Only packets that are sent with the expected device ID, will be processed. Packet Error Rate, Bit Error Rate and RSSI of the packets is displayed to inform about the quality of the transmission. For both modes, the channel on which the Tx/Rx radio will operate and the device IDs of the transmitters and receiver radio, can be set. Radio related events can be logged on UART on demand. CLI can be used for setting and starting/stoping the application as well, to start with CLI interface send 'help' over terminal. NOTE: Due to the higher current consumption of the continuous radio usage (especially in Rx Mode), it is not recommended to power the boards from a coin cell. Instead, a USB power bank can be used if portability is needed."},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/flex/documentation/example/rail/rail_soc_range_test/readme.md"],"description":"This is a customizable Range Test Sample Application that demonstrates over the air range of the EFR32. This sample app can act as a Transmitter and a Receiver. Flashing this app into two separate boards makes it possible to test the features and specification of the radio. The sample also provides an example how the RAIL API can be used. In Tx Mode, the user can send packets. Packet length (7..64 bytes) and the number of packets to transmit (from 500 up to continuous) can be set. Output power can be set in 0.5dBm steps (power setpoint), between -15..+20dBm. Actual minimum and maximum power may vary in different frequencies as well as the power that is actually set by RAIL. The get_power command displays the setpoint first, then actual value. In Rx Mode, the radio listens on the given channel and inspects the packets received. Only packets that are sent with the expected device ID, will be processed. Packet Error Rate, Bit Error Rate and RSSI of the packets is displayed to inform about the quality of the transmission. For both modes, the channel on which the Tx/Rx radio will operate and the device IDs of the transmitters and receiver radio, can be set. Radio related events can be logged on UART on demand. CLI can be used for setting and starting/stoping the application as well, to start with CLI interface send 'help' over terminal. NOTE: Due to the higher current consumption of the continuous radio usage (especially in Rx Mode), it is not recommended to power the boards from a coin cell. Instead, a USB power bank can be used if portability is needed.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.rail_soc_range_test_cli.example/rail/rail_soc_range_test_cli/rail_soc_range_test_cli.slcp","text":"RAIL - SoC Range Test","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a customizable Range Test Sample Application that demonstrates over the air range of the EFR32. This sample app can act as a Transmitter and a Receiver. Flashing this app into two separate boards makes it possible to test the features and specification of the radio. The sample also provides an example how the RAIL API can be used. In Tx Mode, the user can send packets. Packet length (7..64 bytes) and the number of packets to transmit (from 500 up to continuous) can be set. Output power can be set in 0.5dBm steps (power setpoint), between -15..+20dBm. Actual minimum and maximum power may vary in different frequencies as well as the power that is actually set by RAIL. The get_power command displays the setpoint first, then actual value. In Rx Mode, the radio listens on the given channel and inspects the packets received. Only packets that are sent with the expected device ID, will be processed. Packet Error Rate, Bit Error Rate and RSSI of the packets is displayed to inform about the quality of the transmission. For both modes, the channel on which the Tx/Rx radio will operate and the device IDs of the transmitters and receiver radio, can be set. Radio related events can be logged on UART on demand. CLI can be used for setting and starting/stoping the application as well, to start with CLI interface send 'help' over terminal. NOTE: Due to the higher current consumption of the continuous radio usage (especially in Rx Mode), it is not recommended to power the boards from a coin cell. Instead, a USB power bank can be used if portability is needed."},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/flex/documentation/example/rail/rail_soc_range_test/readme.md"],"description":"This is the Range Test Sample Application that demonstrates over the air range of the Silicon Labs boards. 5 predefined PHYs can be used for this: BLE: 125kbps, BLE: 500kbps, BLE: 1Mbps, BLE: 2Mbps, IEEE80215.4: 250kbps. This sample app can act as a Transmitter and a Receiver. Flashing this app into two separate boards makes it possible to test the features and specification of the radio. The sample also provides an example how the RAIL API can be used. In Tx Mode, the user can send packets. Packet length defined by the PHY and the number of packets to transmit (from 500 up to continuous) can be set. Output power can be set in 0.5dBm steps (power setpoint), between -15..+20dBm. Actual minimum and maximum power may vary in different frequencies as well as the power that is actually set by RAIL. The get_power command displays the setpoint first, then actual value. In Rx Mode, the radio listens on the given predefined PHY and inspects the packets received. Packet Error Rate, Bit Error Rate and RSSI of the packets is displayed to inform about the quality of the transmission. Radio related events can be logged on UART on demand. CLI can be used to set and get configuration of the app, and to start and stop it. To get started with CLI send 'help' with a terminal. NOTE: Due to the higher current consumption of the continuous radio usage (especially in Rx Mode), it is not recommended to power the boards from a coin cell. Instead, a USB power bank can be used if portability is needed.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.rail_soc_range_test_std_cli.example/rail/rail_soc_range_test_std_cli/rail_soc_range_test_std_cli.slcp","text":"RAIL - SoC Range Test BLE and IEEE802.15.4","priority":9999999,"category":"SOFTWARE","toolTipText":"This is the Range Test Sample Application that demonstrates over the air range of the Silicon Labs boards. 5 predefined PHYs can be used for this: BLE: 125kbps, BLE: 500kbps, BLE: 1Mbps, BLE: 2Mbps, IEEE80215.4: 250kbps. This sample app can act as a Transmitter and a Receiver. Flashing this app into two separate boards makes it possible to test the features and specification of the radio. The sample also provides an example how the RAIL API can be used. In Tx Mode, the user can send packets. Packet length defined by the PHY and the number of packets to transmit (from 500 up to continuous) can be set. Output power can be set in 0.5dBm steps (power setpoint), between -15..+20dBm. Actual minimum and maximum power may vary in different frequencies as well as the power that is actually set by RAIL. The get_power command displays the setpoint first, then actual value. In Rx Mode, the radio listens on the given predefined PHY and inspects the packets received. Packet Error Rate, Bit Error Rate and RSSI of the packets is displayed to inform about the quality of the transmission. Radio related events can be logged on UART on demand. CLI can be used to set and get configuration of the app, and to start and stop it. To get started with CLI send 'help' with a terminal. NOTE: Due to the higher current consumption of the continuous radio usage (especially in Rx Mode), it is not recommended to power the boards from a coin cell. Instead, a USB power bank can be used if portability is needed."},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/flex/documentation/example/rail/rail_soc_simple_trx/readme.md"],"description":"This application demonstrates the simplest exchange of transmit and receive operation between two nodes. Both nodes are capable of sending and receiving messages. On the WSTK, any button press (PB0/PB1) will send a message. LED1 will toggle on message send and LED0 will toggle on message receive. CLI can also be used for sending and showing received messages. To send enter 'tx' or 'send'. By default the received packets will be printed out in terminal, to enable or disable print enter 'rx 1' ('receive 1') or 'rx 0' ('receive 0') in terminal. With one click this baremetal sample app can be run on an OS, currently MicriumOS and FreeRTOS is supported. NOTE: Due to the higher current consumption of the continuous radio usage (especially in Rx Mode), it is not recommended to power the boards from a coin cell. Instead, a USB power bank can be used if portability is needed.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.rail_soc_simple_trx.example/rail/rail_soc_simple_trx/rail_soc_simple_trx.slcp","text":"RAIL - SoC Simple TRX","priority":9999999,"category":"SOFTWARE","toolTipText":"This application demonstrates the simplest exchange of transmit and receive operation between two nodes. Both nodes are capable of sending and receiving messages. On the WSTK, any button press (PB0/PB1) will send a message. LED1 will toggle on message send and LED0 will toggle on message receive. CLI can also be used for sending and showing received messages. To send enter 'tx' or 'send'. By default the received packets will be printed out in terminal, to enable or disable print enter 'rx 1' ('receive 1') or 'rx 0' ('receive 0') in terminal. With one click this baremetal sample app can be run on an OS, currently MicriumOS and FreeRTOS is supported. NOTE: Due to the higher current consumption of the continuous radio usage (especially in Rx Mode), it is not recommended to power the boards from a coin cell. Instead, a USB power bank can be used if portability is needed."},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/flex/documentation/example/rail/rail_soc_simple_trx_std/readme.md"],"description":"This application demonstrates the simplest exchange of transmit and receive operation between two nodes using IEEE Std. 802.15.4 and IEEE Std. 802.15.4g and BLE. Both nodes can send and receive IEEE Std. 802.15.4 and IEEE Std. 802.15.4g or BLE advertising frames. With IEEE Std. 802.15.4 the frame can be sent and received with CSMA/CA, auto-ACK, address filtering and setable Frame Control Frame (available settings: broadcast or unicast). With IEEE Std. 802.15.4g the frame can be sent and received with auto-ACK, address filtering and setable Frame Control Frame (available settings broadcast or unicast). On the WSTK, any button press (PB0/PB1) will send a message. LED1 will toggle on message send and LED0 will toggle on message receive. CLI can also be used for sending and showing received messages. To send enter 'send'. By default the received packets will be printed out in terminal. To change standard to BLE, the Flex - RAIL BLE support software component shall be installed under Flex/RAIL/Utilility. With one click this baremetal sample app can be run on an OS, currently MicriumOS and FreeRTOS is supported. NOTE: Due to the higher current consumption of the continuous radio usage (especially in Rx Mode), it is not recommended to power the boards from a coin cell. Instead, a USB power bank can be used if portability is needed.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.rail_soc_simple_trx_std.example/rail/rail_soc_simple_trx_std/rail_soc_simple_trx_std.slcp","text":"RAIL - SoC Simple TRX Standards","priority":9999999,"category":"SOFTWARE","toolTipText":"This application demonstrates the simplest exchange of transmit and receive operation between two nodes using IEEE Std. 802.15.4 and IEEE Std. 802.15.4g and BLE. Both nodes can send and receive IEEE Std. 802.15.4 and IEEE Std. 802.15.4g or BLE advertising frames. With IEEE Std. 802.15.4 the frame can be sent and received with CSMA/CA, auto-ACK, address filtering and setable Frame Control Frame (available settings: broadcast or unicast). With IEEE Std. 802.15.4g the frame can be sent and received with auto-ACK, address filtering and setable Frame Control Frame (available settings broadcast or unicast). On the WSTK, any button press (PB0/PB1) will send a message. LED1 will toggle on message send and LED0 will toggle on message receive. CLI can also be used for sending and showing received messages. To send enter 'send'. By default the received packets will be printed out in terminal. To change standard to BLE, the Flex - RAIL BLE support software component shall be installed under Flex/RAIL/Utilility. With one click this baremetal sample app can be run on an OS, currently MicriumOS and FreeRTOS is supported. NOTE: Due to the higher current consumption of the continuous radio usage (especially in Rx Mode), it is not recommended to power the boards from a coin cell. Instead, a USB power bank can be used if portability is needed."},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/flex/documentation/example/rail/rail_soc_simple_trx_auto_ack/readme.md"],"description":"This application demonstrates the simplest exchange of TX and ACK (software based) operation between two nodes. Both nodes are capable of sending messages and receiving ACKs. On the WSTK, any button press (PB0/PB1) will send a message. LED0 will toggle on message received and LED1 will toggle on ACK receive. With one click this baremetal sample app can be run on an OS, currently MicriumOS and FreeRTOS is supported.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.rail_soc_simple_trx_auto_ack.example/rail/rail_soc_simple_trx_auto_ack/rail_soc_simple_trx_auto_ack.slcp","text":"RAIL - SoC Simple TRX with Auto-ACK","priority":9999999,"category":"SOFTWARE","toolTipText":"This application demonstrates the simplest exchange of TX and ACK (software based) operation between two nodes. Both nodes are capable of sending messages and receiving ACKs. On the WSTK, any button press (PB0/PB1) will send a message. LED0 will toggle on message received and LED1 will toggle on ACK receive. With one click this baremetal sample app can be run on an OS, currently MicriumOS and FreeRTOS is supported."},{"imageURL":"bundleentry://52.fwk918423056/icons/run.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/flex/documentation/example/rail/rail_soc_range_test/readme.md"],"description":"Range Test with Bluetooth connectivity. It runs on top of Micrium OS RTOS and multiprotocol RAIL. This is a customizable application that demonstrates over the air range of the EFR32. This sample app can act as a Transmitter and a Receiver. Flashing this app into two separate boards makes it possible to test the features and specification of the radio. The sample also provides an example how the RAIL API can be used. In Tx Mode, the user can send packets. Packet length (7..64 bytes) and the number of packets to transmit (from 500 up to continuous) can be set. Output power can be set in 0.5dBm steps (power setpoint), between -15..+20dBm. Actual minimum and maximum power may vary in different frequencies as well as the power that is actually set by RAIL. The get_power command displays the setpoint first, then the actual value. In Rx Mode, the radio listens on the given channel and inspects the packets received. Only packets that are sent with the expected device ID, will be processed. Packet Error Rate, Bit Error Rate and RSSI of the packets is displayed to inform about the quality of the transmission. For both modes, the channel on which the Tx/Rx radio will operate and the device IDs of the transmitters and receiver radio, can be set. Radio related events can be logged on UART on demand. CLI can be used for setting and starting/stoping the application as well, to start with CLI interface send 'help' over terminal. Wireless Gecko mobile app can also be used to control this application over Bluetooth. Currently MicriumOS and FreeRTOS is supported by this sample app. NOTE: Due to the higher current consumption of the continuous radio usage (especially in Rx Mode), it is not recommended to power the boards from a coin cell. Instead, a USB power bank can be used if portability is needed.","id":"com.silabs.sdk.stack.super:4.4.6._1150219681_RAIL Bluetooth DMP - SoC Range Test_asset:..com.silabs.sdk.stack.super_4.4.6.app.flex.demos.rail_bt_dmp_soc_range_test_cli.rail_bt_dmp_soc_range_test_cli-brd4166a.s37","text":"RAIL Bluetooth DMP - SoC Range Test","priority":0,"category":"DEMOS","toolTipText":"Range Test with Bluetooth connectivity. It runs on top of Micrium OS RTOS and multiprotocol RAIL. This is a customizable application that demonstrates over the air range of the EFR32. This sample app can act as a Transmitter and a Receiver. Flashing this app into two separate boards makes it possible to test the features and specification of the radio. The sample also provides an example how the RAIL API can be used. In Tx Mode, the user can send packets. Packet length (7..64 bytes) and the number of packets to transmit (from 500 up to continuous) can be set. Output power can be set in 0.5dBm steps (power setpoint), between -15..+20dBm. Actual minimum and maximum power may vary in different frequencies as well as the power that is actually set by RAIL. The get_power command displays the setpoint first, then the actual value. In Rx Mode, the radio listens on the given channel and inspects the packets received. Only packets that are sent with the expected device ID, will be processed. Packet Error Rate, Bit Error Rate and RSSI of the packets is displayed to inform about the quality of the transmission. For both modes, the channel on which the Tx/Rx radio will operate and the device IDs of the transmitters and receiver radio, can be set. Radio related events can be logged on UART on demand. CLI can be used for setting and starting/stoping the application as well, to start with CLI interface send 'help' over terminal. Wireless Gecko mobile app can also be used to control this application over Bluetooth. Currently MicriumOS and FreeRTOS is supported by this sample app. NOTE: Due to the higher current consumption of the continuous radio usage (especially in Rx Mode), it is not recommended to power the boards from a coin cell. Instead, a USB power bank can be used if portability is needed."},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/flex/documentation/example/rail/rail_soc_range_test/readme.md"],"description":"Range Test with Bluetooth connectivity. It runs on top of Micrium OS RTOS and multiprotocol RAIL. This is a customizable application that demonstrates over the air range of the EFR32. This sample app can act as a Transmitter and a Receiver. Flashing this app into two separate boards makes it possible to test the features and specification of the radio. The sample also provides an example how the RAIL API can be used. In Tx Mode, the user can send packets. Packet length (7..64 bytes) and the number of packets to transmit (from 500 up to continuous) can be set. Output power can be set in 0.5dBm steps (power setpoint), between -15..+20dBm. Actual minimum and maximum power may vary in different frequencies as well as the power that is actually set by RAIL. The get_power command displays the setpoint first, then the actual value. In Rx Mode, the radio listens on the given channel and inspects the packets received. Only packets that are sent with the expected device ID, will be processed. Packet Error Rate, Bit Error Rate and RSSI of the packets is displayed to inform about the quality of the transmission. For both modes, the channel on which the Tx/Rx radio will operate and the device IDs of the transmitters and receiver radio, can be set. Radio related events can be logged on UART on demand. CLI can be used for setting and starting/stoping the application as well, to start with CLI interface send 'help' over terminal. Wireless Gecko mobile app can also be used to control this application over Bluetooth. Currently MicriumOS and FreeRTOS is supported by this sample app. NOTE: Due to the higher current consumption of the continuous radio usage (especially in Rx Mode), it is not recommended to power the boards from a coin cell. Instead, a USB power bank can be used if portability is needed.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.rail_bt_dmp_soc_range_test_cli.example/rail/rail_bt_dmp_soc_range_test_cli/rail_bt_dmp_soc_range_test_cli.slcp","text":"RAIL Bluetooth DMP - SoC Range Test","priority":9999999,"category":"SOFTWARE","toolTipText":"Range Test with Bluetooth connectivity. It runs on top of Micrium OS RTOS and multiprotocol RAIL. This is a customizable application that demonstrates over the air range of the EFR32. This sample app can act as a Transmitter and a Receiver. Flashing this app into two separate boards makes it possible to test the features and specification of the radio. The sample also provides an example how the RAIL API can be used. In Tx Mode, the user can send packets. Packet length (7..64 bytes) and the number of packets to transmit (from 500 up to continuous) can be set. Output power can be set in 0.5dBm steps (power setpoint), between -15..+20dBm. Actual minimum and maximum power may vary in different frequencies as well as the power that is actually set by RAIL. The get_power command displays the setpoint first, then the actual value. In Rx Mode, the radio listens on the given channel and inspects the packets received. Only packets that are sent with the expected device ID, will be processed. Packet Error Rate, Bit Error Rate and RSSI of the packets is displayed to inform about the quality of the transmission. For both modes, the channel on which the Tx/Rx radio will operate and the device IDs of the transmitters and receiver radio, can be set. Radio related events can be logged on UART on demand. CLI can be used for setting and starting/stoping the application as well, to start with CLI interface send 'help' over terminal. Wireless Gecko mobile app can also be used to control this application over Bluetooth. Currently MicriumOS and FreeRTOS is supported by this sample app. NOTE: Due to the higher current consumption of the continuous radio usage (especially in Rx Mode), it is not recommended to power the boards from a coin cell. Instead, a USB power bank can be used if portability is needed."},{"imageURL":"bundleentry://52.fwk918423056/icons/run.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/flex/documentation/example/rail/rail_soc_range_test/readme.md"],"description":"Range Test BLE and IEEE802.15.4 with Bluetooth connectivity. It runs on top of Micrium OS RTOS and multiprotocol RAIL. This application demonstrates over the air range of the Silicon Labs boards. 5 predefined PHYs can be used for this: BLE: 125kbps, BLE: 500kbps, BLE: 1Mbps, BLE: 2Mbps, IEEE80215.4: 250kbps. This sample app can act as a Transmitter and a Receiver. Flashing this app into two separate boards makes it possible to test the features and specification of the radio. The sample also provides an example how the RAIL API can be used. In Tx Mode, the user can send packets. Packet length defined by the PHY and the number of packets to transmit (from 500 up to continuous) can be set. Output power can be set in 0.5dBm steps (power setpoint), between -15..+20dBm. Actual minimum and maximum power may vary in different frequencies as well as the power that is actually set by RAIL. The get_power command displays the setpoint first, then actual value. In Rx Mode, the radio listens on the given predefined PHY and inspects the packets received. Packet Error Rate, Bit Error Rate and RSSI of the packets is displayed to inform about the quality of the transmission. Radio related events can be logged on UART on demand. CLI can be used to set and get configuration of the app, and to start and stop it. To get started with CLI send 'help' with a terminal. Wireless Gecko mobile app can also be used to control this application over Bluetooth. Currently MicriumOS and FreeRTOS is supported by this sample app. NOTE: Due to the higher current consumption of the continuous radio usage (especially in Rx Mode), it is not recommended to power the boards from a coin cell. Instead, a USB power bank can be used if portability is needed.","id":"com.silabs.sdk.stack.super:4.4.6._1150219681_RAIL Bluetooth DMP - SoC Range Test BLE and IEEE802.15.4_asset:..com.silabs.sdk.stack.super_4.4.6.app.flex.demos.rail_bt_dmp_soc_range_test_std_cli.rail_bt_dmp_soc_range_test_std_cli-brd4166a.s37","text":"RAIL Bluetooth DMP - SoC Range Test BLE and IEEE802.15.4","priority":0,"category":"DEMOS","toolTipText":"Range Test BLE and IEEE802.15.4 with Bluetooth connectivity. It runs on top of Micrium OS RTOS and multiprotocol RAIL. This application demonstrates over the air range of the Silicon Labs boards. 5 predefined PHYs can be used for this: BLE: 125kbps, BLE: 500kbps, BLE: 1Mbps, BLE: 2Mbps, IEEE80215.4: 250kbps. This sample app can act as a Transmitter and a Receiver. Flashing this app into two separate boards makes it possible to test the features and specification of the radio. The sample also provides an example how the RAIL API can be used. In Tx Mode, the user can send packets. Packet length defined by the PHY and the number of packets to transmit (from 500 up to continuous) can be set. Output power can be set in 0.5dBm steps (power setpoint), between -15..+20dBm. Actual minimum and maximum power may vary in different frequencies as well as the power that is actually set by RAIL. The get_power command displays the setpoint first, then actual value. In Rx Mode, the radio listens on the given predefined PHY and inspects the packets received. Packet Error Rate, Bit Error Rate and RSSI of the packets is displayed to inform about the quality of the transmission. Radio related events can be logged on UART on demand. CLI can be used to set and get configuration of the app, and to start and stop it. To get started with CLI send 'help' with a terminal. Wireless Gecko mobile app can also be used to control this application over Bluetooth. Currently MicriumOS and FreeRTOS is supported by this sample app. NOTE: Due to the higher current consumption of the continuous radio usage (especially in Rx Mode), it is not recommended to power the boards from a coin cell. Instead, a USB power bank can be used if portability is needed."},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/app/flex/documentation/example/rail/rail_soc_range_test/readme.md"],"description":"Range Test BLE and IEEE802.15.4 with Bluetooth connectivity. It runs on top of Micrium OS RTOS and multiprotocol RAIL. This application demonstrates over the air range of the Silicon Labs boards. 5 predefined PHYs can be used for this: BLE: 125kbps, BLE: 500kbps, BLE: 1Mbps, BLE: 2Mbps, IEEE80215.4: 250kbps. This sample app can act as a Transmitter and a Receiver. Flashing this app into two separate boards makes it possible to test the features and specification of the radio. The sample also provides an example how the RAIL API can be used. In Tx Mode, the user can send packets. Packet length defined by the PHY and the number of packets to transmit (from 500 up to continuous) can be set. Output power can be set in 0.5dBm steps (power setpoint), between -15..+20dBm. Actual minimum and maximum power may vary in different frequencies as well as the power that is actually set by RAIL. The get_power command displays the setpoint first, then actual value. In Rx Mode, the radio listens on the given predefined PHY and inspects the packets received. Packet Error Rate, Bit Error Rate and RSSI of the packets is displayed to inform about the quality of the transmission. Radio related events can be logged on UART on demand. CLI can be used to set and get configuration of the app, and to start and stop it. To get started with CLI send 'help' with a terminal. Wireless Gecko mobile app can also be used to control this application over Bluetooth. Currently MicriumOS and FreeRTOS is supported by this sample app. NOTE: Due to the higher current consumption of the continuous radio usage (especially in Rx Mode), it is not recommended to power the boards from a coin cell. Instead, a USB power bank can be used if portability is needed.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.rail_bt_dmp_soc_range_test_std_cli.example/rail/rail_bt_dmp_soc_range_test_std_cli/rail_bt_dmp_soc_range_test_std_cli.slcp","text":"RAIL Bluetooth DMP - SoC Range Test BLE and IEEE802.15.4","priority":9999999,"category":"SOFTWARE","toolTipText":"Range Test BLE and IEEE802.15.4 with Bluetooth connectivity. It runs on top of Micrium OS RTOS and multiprotocol RAIL. This application demonstrates over the air range of the Silicon Labs boards. 5 predefined PHYs can be used for this: BLE: 125kbps, BLE: 500kbps, BLE: 1Mbps, BLE: 2Mbps, IEEE80215.4: 250kbps. This sample app can act as a Transmitter and a Receiver. Flashing this app into two separate boards makes it possible to test the features and specification of the radio. The sample also provides an example how the RAIL API can be used. In Tx Mode, the user can send packets. Packet length defined by the PHY and the number of packets to transmit (from 500 up to continuous) can be set. Output power can be set in 0.5dBm steps (power setpoint), between -15..+20dBm. Actual minimum and maximum power may vary in different frequencies as well as the power that is actually set by RAIL. The get_power command displays the setpoint first, then actual value. In Rx Mode, the radio listens on the given predefined PHY and inspects the packets received. Packet Error Rate, Bit Error Rate and RSSI of the packets is displayed to inform about the quality of the transmission. Radio related events can be logged on UART on demand. CLI can be used to set and get configuration of the app, and to start and stop it. To get started with CLI send 'help' with a terminal. Wireless Gecko mobile app can also be used to control this application over Bluetooth. Currently MicriumOS and FreeRTOS is supported by this sample app. NOTE: Due to the higher current consumption of the continuous radio usage (especially in Rx Mode), it is not recommended to power the boards from a coin cell. Instead, a USB power bank can be used if portability is needed."},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/protocol/zigbee/app/ncp/sample-app/ncp-dmp/readme-zigbee_ncp-ble_ncp-spi.html"],"description":"This dynamic multiprotocol (DMP) application runs the Zigbee NCP simultaneously with the Bluetooth NCP. Communication with Zigbee and Bluetooth host applications is enabled using the Co-Processor Communication Protocol, which acts as a protocol multiplexer and serial transport layer. The host applications connect to the CPC daemon, which in turn connects to the EFR via a SPI link. The Zigbee NCP part of this application can be built as configured, or can optionally be augmented with customized extensions for initialization, main loop processing, event definition/handling, and messaging with the host.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.zigbee_ncp-ble_ncp-spi.app/ncp/sample-app/ncp-dmp/zigbee_ncp-ble_ncp-spi.slcp","text":"Zigbee - NCP + Bluetooth - NCP zigbee_ncp-ble_ncp-spi","priority":9999999,"category":"SOFTWARE","toolTipText":"This dynamic multiprotocol (DMP) application runs the Zigbee NCP simultaneously with the Bluetooth NCP. Communication with Zigbee and Bluetooth host applications is enabled using the Co-Processor Communication Protocol, which acts as a protocol multiplexer and serial transport layer. The host applications connect to the CPC daemon, which in turn connects to the EFR via a SPI link. The Zigbee NCP part of this application can be built as configured, or can optionally be augmented with customized extensions for initialization, main loop processing, event definition/handling, and messaging with the host."},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/protocol/zigbee/app/ncp/sample-app/ncp-dmp/readme-zigbee_ncp-ble_ncp-uart.html"],"description":"This dynamic multiprotocol (DMP) application runs the Zigbee NCP simultaneously with the Bluetooth NCP. Communication with Zigbee and Bluetooth host applications is enabled using the Co-Processor Communication Protocol, which acts as a protocol multiplexer and serial transport layer. The host applications connect to the CPC daemon, which in turn connects to the EFR via a UART link. The Zigbee NCP part of this application can be built as configured, or can optionally be augmented with customized extensions for initialization, main loop processing, event definition/handling, and messaging with the host.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.zigbee_ncp-ble_ncp-uart.app/ncp/sample-app/ncp-dmp/zigbee_ncp-ble_ncp-uart.slcp","text":"Zigbee - NCP + Bluetooth - NCP zigbee_ncp-ble_ncp-uart","priority":9999999,"category":"SOFTWARE","toolTipText":"This dynamic multiprotocol (DMP) application runs the Zigbee NCP simultaneously with the Bluetooth NCP. Communication with Zigbee and Bluetooth host applications is enabled using the Co-Processor Communication Protocol, which acts as a protocol multiplexer and serial transport layer. The host applications connect to the CPC daemon, which in turn connects to the EFR via a UART link. The Zigbee NCP part of this application can be built as configured, or can optionally be augmented with customized extensions for initialization, main loop processing, event definition/handling, and messaging with the host."},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/protocol/zigbee/app/ncp/sample-app/ncp-cmp/readme-zigbee_ncp-ot_rcp-spi.html"],"description":"This concurrent multiprotocol (CMP) application runs the Zigbee NCP simultaneously with the OpenThread RCP. Communication with Zigbee and OpenThread host applications is enabled using the Co-Processor Communication Protocol, which acts as a protocol multiplexer and serial transport layer. The host applications connect to the CPC daemon, which in turn connects to the EFR via a SPI link. The Zigbee NCP part of this application can be built as configured, or can optionally be augmented with ustomized extensions for initialization, main loop processing, event definition/handling, and messaging with the host.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.zigbee_ncp-ot_rcp-spi.app/ncp/sample-app/ncp-cmp/zigbee_ncp-ot_rcp-spi.slcp","text":"Zigbee - NCP + OpenThread - RCP zigbee_ncp-ot_rcp-spi","priority":9999999,"category":"SOFTWARE","toolTipText":"This concurrent multiprotocol (CMP) application runs the Zigbee NCP simultaneously with the OpenThread RCP. Communication with Zigbee and OpenThread host applications is enabled using the Co-Processor Communication Protocol, which acts as a protocol multiplexer and serial transport layer. The host applications connect to the CPC daemon, which in turn connects to the EFR via a SPI link. The Zigbee NCP part of this application can be built as configured, or can optionally be augmented with ustomized extensions for initialization, main loop processing, event definition/handling, and messaging with the host."},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/protocol/zigbee/app/ncp/sample-app/ncp-cmp/readme-zigbee_ncp-ot_rcp-uart.html"],"description":"This concurrent multiprotocol (CMP) application runs the Zigbee NCP simultaneously with the OpenThread RCP. Communication with Zigbee and OpenThread host applications is enabled using the Co-Processor Communication Protocol, which acts as a protocol multiplexer and serial transport layer. The host applications connect to the CPC daemon, which in turn connects to the EFR via a UART link. The Zigbee NCP part of this application can be built as configured, or can optionally be augmented with customized extensions for initialization, main loop processing, event definition/handling, and messaging with the host.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.zigbee_ncp-ot_rcp-uart.app/ncp/sample-app/ncp-cmp/zigbee_ncp-ot_rcp-uart.slcp","text":"Zigbee - NCP + OpenThread - RCP zigbee_ncp-ot_rcp-uart","priority":9999999,"category":"SOFTWARE","toolTipText":"This concurrent multiprotocol (CMP) application runs the Zigbee NCP simultaneously with the OpenThread RCP. Communication with Zigbee and OpenThread host applications is enabled using the Co-Processor Communication Protocol, which acts as a protocol multiplexer and serial transport layer. The host applications connect to the CPC daemon, which in turn connects to the EFR via a UART link. The Zigbee NCP part of this application can be built as configured, or can optionally be augmented with customized extensions for initialization, main loop processing, event definition/handling, and messaging with the host."},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/protocol/zigbee/app/ncp/sample-app/mp-ncp-spi/readme.html"],"description":"The multi-PAN application provides support to form two personal area networks  on same channel on single radio. This multi-PAN network coprocessor (NCP)  application supports communication with a host application over a SPI interface.  This NCP application can be built as configured, or optionally can be augmented  with customized extensions for initialization, main loop processing, event  definition/handling, and messaging with the host.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.mp-ncp-spi.app/ncp/sample-app/mp-ncp-spi/mp-ncp-spi.slcp","text":"Zigbee - NCP mp-ncp-spi","priority":9999999,"category":"SOFTWARE","toolTipText":"The multi-PAN application provides support to form two personal area networks  on same channel on single radio. This multi-PAN network coprocessor (NCP)  application supports communication with a host application over a SPI interface.  This NCP application can be built as configured, or optionally can be augmented  with customized extensions for initialization, main loop processing, event  definition/handling, and messaging with the host."},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/protocol/zigbee/app/ncp/sample-app/mp-ncp-uart-hw/readme.html"],"description":"The multi-PAN application provides support to form two personal area networks  on same channel on single radio. This multi-PAN network coprocessor (NCP)  application supports communication with a host application over a UART  interface with hardware flow control. This NCP application can be built as  configured, or optionally can be augmented with customized extensions for  initialization, main loop processing, event definition/handling, and messaging  with the host.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.mp-ncp-uart-hw.app/ncp/sample-app/mp-ncp-uart-hw/mp-ncp-uart-hw.slcp","text":"Zigbee - NCP mp-ncp-uart-hw","priority":9999999,"category":"SOFTWARE","toolTipText":"The multi-PAN application provides support to form two personal area networks  on same channel on single radio. This multi-PAN network coprocessor (NCP)  application supports communication with a host application over a UART  interface with hardware flow control. This NCP application can be built as  configured, or optionally can be augmented with customized extensions for  initialization, main loop processing, event definition/handling, and messaging  with the host."},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/protocol/zigbee/app/ncp/sample-app/ncp-spi/readme.html"],"description":"This network coprocessor (NCP) application supports communication with a host application over a SPI interface.  This NCP application can be built as configured, or optionally can be augmented with customized extensions for initialization, main loop processing, event definition/handling, and messaging with the host.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.ncp-spi.app/ncp/sample-app/ncp-spi/ncp-spi.slcp","text":"Zigbee - NCP ncp-spi","priority":9999999,"category":"SOFTWARE","toolTipText":"This network coprocessor (NCP) application supports communication with a host application over a SPI interface.  This NCP application can be built as configured, or optionally can be augmented with customized extensions for initialization, main loop processing, event definition/handling, and messaging with the host."},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/protocol/zigbee/app/ncp/sample-app/ncp-uart-hw/readme.html"],"description":"This network coprocessor (NCP) application supports communication with a host application over a UART interface with hardware flow control. This NCP application can be built as configured, or optionally can be augmented with customized extensions for initialization, main loop processing, event definition/handling, and messaging with the host. To create a ECC-enabled application for the Smart Energy Profile, please download and extract the 'EmberZnet-Smart-Energy.zip' side-package over your installed SDK and add, depending on use-case, one of two new components ('CBKE 163k1'; 'CBKE 283k1') to your application.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.ncp-uart-hw.app/ncp/sample-app/ncp-uart-hw/ncp-uart-hw.slcp","text":"Zigbee - NCP ncp-uart-hw","priority":9999999,"category":"SOFTWARE","toolTipText":"This network coprocessor (NCP) application supports communication with a host application over a UART interface with hardware flow control. This NCP application can be built as configured, or optionally can be augmented with customized extensions for initialization, main loop processing, event definition/handling, and messaging with the host. To create a ECC-enabled application for the Smart Energy Profile, please download and extract the 'EmberZnet-Smart-Energy.zip' side-package over your installed SDK and add, depending on use-case, one of two new components ('CBKE 163k1'; 'CBKE 283k1') to your application."},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/protocol/zigbee/app/ncp/sample-app/ncp-uart-hw-gp-multi-rail/readme.html"],"description":"This network co-processor (NCP) application uses the multiple RAIL demo component (multirail-demo), which uses the second RAIL handle to schedule a pre-configured outgoing Green Power device frame (GPDF) in response to an incoming bidirectional GPDF with its rx-after-tx bit set.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.ncp-uart-hw-gp-multi-rail.app/ncp/sample-app/ncp-uart-hw-gp-multi-rail/ncp-uart-hw-gp-multi-rail.slcp","text":"Zigbee - NCP ncp-uart-hw-gp-multi-rail","priority":9999999,"category":"SOFTWARE","toolTipText":"This network co-processor (NCP) application uses the multiple RAIL demo component (multirail-demo), which uses the second RAIL handle to schedule a pre-configured outgoing Green Power device frame (GPDF) in response to an incoming bidirectional GPDF with its rx-after-tx bit set."},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/protocol/zigbee/app/ncp/sample-app/xncp-led/readme.html"],"description":"An extensible network co-processor (xNCP) application with an LED controlled by a HOST.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.xncp-led-ncp.app/ncp/sample-app/xncp-led/xncp-led-ncp.slcp","text":"Zigbee - NCP xncp-led-ncp","priority":9999999,"category":"SOFTWARE","toolTipText":"An extensible network co-processor (xNCP) application with an LED controlled by a HOST."},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/protocol/zigbee/app/framework/scenarios/multiprotocol/DynamicMultiprotocolLight/readme.html"],"description":"This is a sample application demonstrating a light application using dynamic multiprotocol (Zigbee + Bluetooth LE) and NVM3 for persistent storage. This application does not use LCD, LED or buttons. We recommend the use of Micrium Kernel for this sample application.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.DynamicMultiprotocolLightMinimal.app/framework/scenarios/multiprotocol/DynamicMultiprotocolLight/DynamicMultiprotocolLightMinimal.slcp","text":"Zigbee - SoC DynamicMultiprotocolLightMinimal","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a sample application demonstrating a light application using dynamic multiprotocol (Zigbee + Bluetooth LE) and NVM3 for persistent storage. This application does not use LCD, LED or buttons. We recommend the use of Micrium Kernel for this sample application."},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/protocol/zigbee/app/framework/scenarios/multiprotocol/DynamicMultiprotocolLightSed/readme.html"],"description":"This is a sample application demonstrating a sleepy light application using dynamic multiprotocol (Zigbee + Bluetooth LE) and NVM3 for persistent storage. This application does not use LCD, LEDs or buttons. We recommend the use of Micrium Kernel for this sample application.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.DynamicMultiprotocolLightSedMinimal.app/framework/scenarios/multiprotocol/DynamicMultiprotocolLightSed/DynamicMultiprotocolLightSedMinimal.slcp","text":"Zigbee - SoC DynamicMultiprotocolLightSedMinimal","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a sample application demonstrating a sleepy light application using dynamic multiprotocol (Zigbee + Bluetooth LE) and NVM3 for persistent storage. This application does not use LCD, LEDs or buttons. We recommend the use of Micrium Kernel for this sample application."},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/protocol/zigbee/app/gpd/sample-app/gpd-sensor/readme.html"],"description":"This is an Energy Service Interface application for a Zigbee Smart Energy 1.2b network. This is a Green Power Sensor Device that pairs with a GP Combo or Sink device and sends gpd reports periodically.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.gpd-sensor.app/gpd/sample-app/gpd-sensor/gpd-sensor.slcp","text":"Zigbee - SoC GPD Sensor","priority":9999999,"category":"SOFTWARE","toolTipText":"This is an Energy Service Interface application for a Zigbee Smart Energy 1.2b network. This is a Green Power Sensor Device that pairs with a GP Combo or Sink device and sends gpd reports periodically."},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/protocol/zigbee/app/gpd/sample-app/gpd-switch/readme.html"],"description":"This is a Green Power On/Off Switch Device that pairs with a GP Combo or Sink Light and controls its operation.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.gpd-switch.app/gpd/sample-app/gpd-switch/gpd-switch.slcp","text":"Zigbee - SoC GPD Switch","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a Green Power On/Off Switch Device that pairs with a GP Combo or Sink Light and controls its operation."},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/protocol/zigbee/app/framework/scenarios/z3/Z3Light/readme.html"],"description":"This is a Zigbee 3.0 light application using NVM3 as the persistent storage.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.Z3Light.app/framework/scenarios/z3/Z3Light/Z3Light.slcp","text":"Zigbee - SoC Light","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a Zigbee 3.0 light application using NVM3 as the persistent storage."},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/protocol/zigbee/app/framework/scenarios/z3/Z3LightGPCombo/readme.html"],"description":"This is a Zigbee 3.0 light application with Green Power endpoint, Green Power Proxy and Sink functionality.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.Z3LightGPCombo.app/framework/scenarios/z3/Z3LightGPCombo/Z3LightGPCombo.slcp","text":"Zigbee - SoC LightGPCombo","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a Zigbee 3.0 light application with Green Power endpoint, Green Power Proxy and Sink functionality."},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/protocol/zigbee/app/framework/scenarios/zha/StandardizedRfTesting/readme.html"],"description":"This is a pre-standardization implementation of Zigbee's RF testing standard. It utilizes the TIS (Total Isotropic Sensitivity)/ TRP (Total Radiated Power) testing interfaces and is optional for Zigbee certifications. This application adheres to the Zigbee RF Performance Test Spec v1.0.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.StandardizedRfTesting.app/framework/scenarios/zha/StandardizedRfTesting/StandardizedRfTesting.slcp","text":"Zigbee - SoC StandardizedRfTesting","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a pre-standardization implementation of Zigbee's RF testing standard. It utilizes the TIS (Total Isotropic Sensitivity)/ TRP (Total Radiated Power) testing interfaces and is optional for Zigbee certifications. This application adheres to the Zigbee RF Performance Test Spec v1.0."},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/protocol/zigbee/app/framework/scenarios/z3/Z3Switch/readme.html"],"description":"This is a Zigbee 3.0 switch application using NVM3 as the persistent storage.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.Z3Switch.app/framework/scenarios/z3/Z3Switch/Z3Switch.slcp","text":"Zigbee - SoC Switch","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a Zigbee 3.0 switch application using NVM3 as the persistent storage."},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/protocol/zigbee/app/framework/scenarios/multiprotocol/ZigbeeDirectDeviceLight/readme.html"],"description":"This is a sample application demonstrating a Zigbee Direct Device (ZDD) as part of a light application using dynamic multiprotocol (Zigbee + Bluetooth LE) and NVM3 for persistent storage.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.ZigbeeDirectDeviceLight.app/framework/scenarios/multiprotocol/ZigbeeDirectDeviceLight/ZigbeeDirectDeviceLight.slcp","text":"Zigbee - SoC ZigbeeDirectDeviceLight","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a sample application demonstrating a Zigbee Direct Device (ZDD) as part of a light application using dynamic multiprotocol (Zigbee + Bluetooth LE) and NVM3 for persistent storage."},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/protocol/zigbee/app/framework/scenarios/z3/ZigbeeMinimal/readme.html"],"description":"This is a Zigbee minimal SoC network-layer application suitable as a  starting point for new application development.","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.ZigbeeMinimal.app/framework/scenarios/z3/ZigbeeMinimal/ZigbeeMinimal.slcp","text":"Zigbee - SoC ZigbeeMinimal","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a Zigbee minimal SoC network-layer application suitable as a  starting point for new application development."},{"imageURL":"bundleentry://458.fwk918423056/icons/projectNew.svg","supportDocuments":["file:/C:/Users/sekou/SimplicityStudio/SDKs/gecko_sdk/protocol/zigbee/app/framework/scenarios/z3/z3-light_ot-ftd_soc/readme.html"],"description":"This is a modified version of Zigbee 3.0 light application + OT-FTD application, that enables using the same rail handle with 2 different 15.4 stacks. This app brings in CMSIS-RTOS by default","id":"template.uc.com.silabs.sdk.stack.super:4.4.6._1150219681.z3-light_ot-ftd_soc.app/framework/scenarios/z3/z3-light_ot-ftd_soc/z3-light_ot-ftd_soc.slcp","text":"z3-light_ot-ftd_soc","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a modified version of Zigbee 3.0 light application + OT-FTD application, that enables using the same rail handle with 2 different 15.4 stacks. This app brings in CMSIS-RTOS by default"}],"filters":[{"futureCount":0,"anySelected":false,"id":0,"filters":[{"futureCount":46,"anySelected":false,"id":0,"filters":[],"title":"Bluetooth","parentId":0,"selected":false},{"futureCount":32,"anySelected":false,"id":1,"filters":[],"title":"Bluetooth Mesh","parentId":0,"selected":false},{"futureCount":10,"anySelected":false,"id":2,"filters":[],"title":"Connect","parentId":0,"selected":false},{"futureCount":17,"anySelected":false,"id":3,"filters":[],"title":"RAIL","parentId":0,"selected":false},{"futureCount":28,"anySelected":false,"id":4,"filters":[],"title":"Thread","parentId":0,"selected":false},{"futureCount":28,"anySelected":false,"id":5,"filters":[],"title":"Zigbee","parentId":0,"selected":false}],"title":"Wireless Technology","parentId":-1,"selected":false},{"futureCount":0,"anySelected":false,"id":1,"filters":[{"futureCount":1,"anySelected":false,"id":0,"filters":[],"title":"Host","parentId":1,"selected":false},{"futureCount":22,"anySelected":false,"id":1,"filters":[],"title":"NCP","parentId":1,"selected":false},{"futureCount":14,"anySelected":false,"id":2,"filters":[],"title":"RCP","parentId":1,"selected":false},{"futureCount":159,"anySelected":false,"id":3,"filters":[],"title":"SoC","parentId":1,"selected":false}],"title":"Device Type","parentId":-1,"selected":false},{"futureCount":0,"anySelected":false,"id":2,"filters":[{"futureCount":50,"anySelected":false,"id":0,"filters":[],"title":"32-bit MCU","parentId":2,"selected":false},{"futureCount":14,"anySelected":false,"id":1,"filters":[],"title":"Bootloader","parentId":2,"selected":false}],"title":"MCU","parentId":-1,"selected":false},{"futureCount":0,"anySelected":false,"id":3,"filters":[{"futureCount":5,"anySelected":false,"id":0,"filters":[],"title":"Machine Learning","parentId":3,"selected":false},{"futureCount":29,"anySelected":false,"id":1,"filters":[],"title":"Multiprotocol","parentId":3,"selected":false}],"title":"Capability","parentId":-1,"selected":false},{"futureCount":0,"anySelected":false,"id":4,"filters":[{"futureCount":132,"anySelected":false,"id":0,"filters":[],"title":"Advanced","parentId":4,"selected":false},{"futureCount":62,"anySelected":false,"id":1,"filters":[],"title":"Beginner","parentId":4,"selected":false}],"title":"Project Difficulty","parentId":-1,"selected":false},{"futureCount":0,"anySelected":false,"id":5,"filters":[{"futureCount":4,"anySelected":false,"id":0,"filters":[],"title":"Experimental","parentId":5,"selected":false},{"futureCount":1,"anySelected":false,"id":1,"filters":[],"title":"Internal","parentId":5,"selected":false},{"futureCount":2,"anySelected":false,"id":2,"filters":[],"title":"None Specified","parentId":5,"selected":false},{"futureCount":190,"anySelected":false,"id":3,"filters":[],"title":"Production","parentId":5,"selected":false}],"title":"Quality","parentId":-1,"selected":false},{"futureCount":0,"anySelected":false,"id":6,"filters":[{"futureCount":197,"anySelected":false,"id":0,"filters":[],"title":"Gecko SDK Suite v4.4.6","parentId":6,"selected":false}],"title":"Provider","parentId":-1,"selected":false}],"totalCount":197}
